# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ffaker` gem.
# Please instead update this file by running `bin/tapioca gem ffaker`.

# sourse: https://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html#kotei-denwa
#
# source://ffaker//lib/ffaker/version.rb#3
module FFaker
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils

  class << self
    # source://ffaker//lib/ffaker.rb#30
    def bothify(masks); end

    # source://ffaker//lib/ffaker.rb#18
    def hexify(*masks); end

    # source://ffaker//lib/ffaker.rb#26
    def letterify(*masks); end

    # source://ffaker//lib/ffaker.rb#22
    def numerify(*masks); end
  end
end

# source://ffaker//lib/ffaker/aws.rb#4
module FFaker::AWS
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AWS

  # source://ffaker//lib/ffaker/aws.rb#16
  def instance_tenancy; end

  # source://ffaker//lib/ffaker/aws.rb#8
  def instance_type; end

  # source://ffaker//lib/ffaker/aws.rb#12
  def offering_type; end

  # source://ffaker//lib/ffaker/aws.rb#20
  def product_description; end
end

# source://ffaker//lib/ffaker/address.rb#4
module FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address

  # source://ffaker//lib/ffaker/address.rb#50
  def building_number; end

  # source://ffaker//lib/ffaker/address.rb#37
  def city; end

  # end US deprecation
  #
  # source://ffaker//lib/ffaker/address.rb#29
  def city_prefix; end

  # source://ffaker//lib/ffaker/address.rb#33
  def city_suffix; end

  # source://ffaker//lib/ffaker/address.rb#93
  def country(given_code = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address.rb#102
  def country_code(given_country = T.unsafe(nil)); end

  # end UK deprecation
  #
  # source://ffaker//lib/ffaker/address.rb#89
  def neighborhood; end

  # source://ffaker//lib/ffaker/address.rb#67
  def secondary_address; end

  # source://ffaker//lib/ffaker/address.rb#61
  def street_address(include_secondary = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address.rb#54
  def street_name; end

  # source://ffaker//lib/ffaker/address.rb#46
  def street_suffix; end

  # source://ffaker//lib/ffaker/address.rb#111
  def time_zone; end

  # source://ffaker//lib/ffaker/address.rb#78
  def uk_country; end

  # UK Variants
  #
  # @deprecated UK specific address info. Moved into {AddressUK}
  #
  # source://ffaker//lib/ffaker/address.rb#73
  def uk_county; end

  # source://ffaker//lib/ffaker/address.rb#83
  def uk_postcode; end

  # source://ffaker//lib/ffaker/address.rb#18
  def us_state; end

  # source://ffaker//lib/ffaker/address.rb#23
  def us_state_abbr; end

  # @deprecated US specific address info. Moved into {AddressUS}
  #
  # source://ffaker//lib/ffaker/address.rb#13
  def zip_code; end
end

# source://ffaker//lib/ffaker/address.rb#9
FFaker::Address::CITY_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address.rb#8
FFaker::Address::COMPASS_DIRECTIONS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address.rb#10
FFaker::Address::SEC_ADDR = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_au.rb#6
module FFaker::AddressAU
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressAU

  # source://ffaker//lib/ffaker/address_au.rb#109
  def full_address(st_abbr = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_au.rb#90
  def postcode(st_abbr = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_au.rb#95
  def state; end

  # source://ffaker//lib/ffaker/address_au.rb#99
  def state_abbr; end

  # source://ffaker//lib/ffaker/address_au.rb#103
  def suburb(st_abbr = T.unsafe(nil), p_code = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_au.rb#114
  def time_zone(st_abbr = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/address_au.rb#78
FFaker::AddressAU::POSTCODE = T.let(T.unsafe(nil), Hash)

# based on areas labeled state (+act) here:
# http://en.wikipedia.org/wiki/States_and_territories_of_Australia
#
# source://ffaker//lib/ffaker/address_au.rb#14
FFaker::AddressAU::STATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_au.rb#18
FFaker::AddressAU::STATE_ABBR = T.let(T.unsafe(nil), Array)

# based on http://en.wikipedia.org/wiki/List_of_cities_in_Australia
#
# source://ffaker//lib/ffaker/address_au.rb#20
FFaker::AddressAU::SUBURB = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/address_au.rb#79
FFaker::AddressAU::TIME_ZONE = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/address_br.rb#6
module FFaker::AddressBR
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressBR

  # source://ffaker//lib/ffaker/address_br.rb#26
  def city; end

  # source://ffaker//lib/ffaker/address_br.rb#41
  def complement; end

  # source://ffaker//lib/ffaker/address_br.rb#50
  def full_address(with_complement: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_br.rb#45
  def neighborhood; end

  # source://ffaker//lib/ffaker/address_br.rb#18
  def state; end

  # source://ffaker//lib/ffaker/address_br.rb#22
  def state_abbr; end

  # source://ffaker//lib/ffaker/address_br.rb#34
  def street; end

  # source://ffaker//lib/ffaker/address_br.rb#30
  def street_prefix; end

  # source://ffaker//lib/ffaker/address_br.rb#14
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_br.rb#12
FFaker::AddressBR::STREET_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ca.rb#6
module FFaker::AddressCA
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressCA

  # source://ffaker//lib/ffaker/address_ca.rb#24
  def city; end

  # source://ffaker//lib/ffaker/address_ca.rb#16
  def postal_code; end

  # source://ffaker//lib/ffaker/address_ca.rb#20
  def province; end

  # source://ffaker//lib/ffaker/address_ca.rb#28
  def province_abbr; end
end

# source://ffaker//lib/ffaker/address_ca.rb#13
FFaker::AddressCA::POSTAL_CODE_CHARS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ca.rb#12
FFaker::AddressCA::POSTAL_CODE_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/address_ca.rb#14
FFaker::AddressCA::PROVINCE_ABBRS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ch.rb#4
module FFaker::AddressCH
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressCH

  # source://ffaker//lib/ffaker/address_ch.rb#14
  def canton_abbr; end

  # source://ffaker//lib/ffaker/address_ch.rb#10
  def postal_code; end
end

# source://ffaker//lib/ffaker/address_ch_de.rb#4
module FFaker::AddressCHDE
  include ::FFaker::Address
  include ::FFaker::AddressCH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressCH
  extend ::FFaker::AddressCHDE

  # source://ffaker//lib/ffaker/address_ch_de.rb#10
  def canton; end
end

# source://ffaker//lib/ffaker/address_ch_fr.rb#4
module FFaker::AddressCHFR
  include ::FFaker::Address
  include ::FFaker::AddressCH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressCH
  extend ::FFaker::AddressCHFR

  # source://ffaker//lib/ffaker/address_ch_fr.rb#10
  def canton; end
end

# source://ffaker//lib/ffaker/address_ch_it.rb#4
module FFaker::AddressCHIT
  include ::FFaker::Address
  include ::FFaker::AddressCH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressCH
  extend ::FFaker::AddressCHIT

  # source://ffaker//lib/ffaker/address_ch_it.rb#10
  def canton; end
end

# source://ffaker//lib/ffaker/address_da.rb#4
module FFaker::AddressDA
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressDA

  # source://ffaker//lib/ffaker/address_da.rb#33
  def city; end

  # source://ffaker//lib/ffaker/address_da.rb#45
  def full_address; end

  # source://ffaker//lib/ffaker/address_da.rb#25
  def kommune; end

  # source://ffaker//lib/ffaker/address_da.rb#17
  def post_nr; end

  # source://ffaker//lib/ffaker/address_da.rb#29
  def region; end

  # source://ffaker//lib/ffaker/address_da.rb#21
  def state; end

  # source://ffaker//lib/ffaker/address_da.rb#41
  def street_address; end

  # source://ffaker//lib/ffaker/address_da.rb#37
  def street_name; end

  # source://ffaker//lib/ffaker/address_da.rb#13
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_da.rb#10
FFaker::AddressDA::REGION = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_da.rb#11
FFaker::AddressDA::STATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_de.rb#4
module FFaker::AddressDE
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressDE

  # source://ffaker//lib/ffaker/address_de.rb#18
  def city; end

  # source://ffaker//lib/ffaker/address_de.rb#14
  def state; end

  # source://ffaker//lib/ffaker/address_de.rb#27
  def street_address; end

  # source://ffaker//lib/ffaker/address_de.rb#22
  def street_name; end

  # source://ffaker//lib/ffaker/address_de.rb#10
  def zip_code; end

  private

  # source://ffaker//lib/ffaker/address_de.rb#33
  def random_type_of_street; end
end

# List of countries is from Freebase:
# https://www.googleapis.com/freebase/v1/mqlread?lang=/lang/fi&query=[%7B%22name%22:null,%22type%22:%22/location/country%22%7D]
# Streetnames are from areacode 32100 (http://posti.fi/postipalvelee/tyokalut/postinumerohaku/)
# List of cities is from http://fi.wikipedia.org/wiki/Luettelo_Suomen_kaupungeista
#
# source://ffaker//lib/ffaker/address_fi.rb#8
module FFaker::AddressFI
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressFI

  # source://ffaker//lib/ffaker/address_fi.rb#20
  def city; end

  # source://ffaker//lib/ffaker/address_fi.rb#36
  def full_address; end

  # source://ffaker//lib/ffaker/address_fi.rb#40
  def random_country; end

  # source://ffaker//lib/ffaker/address_fi.rb#28
  def street_address; end

  # source://ffaker//lib/ffaker/address_fi.rb#24
  def street_name; end

  # source://ffaker//lib/ffaker/address_fi.rb#32
  def street_nbr; end

  # source://ffaker//lib/ffaker/address_fi.rb#16
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_fi.rb#14
FFaker::AddressFI::STREET_NBR_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_fr.rb#4
module FFaker::AddressFR
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressFR

  # source://ffaker//lib/ffaker/address_fr.rb#26
  def city; end

  # source://ffaker//lib/ffaker/address_fr.rb#30
  def full_address; end

  # source://ffaker//lib/ffaker/address_fr.rb#22
  def postal_code; end

  # source://ffaker//lib/ffaker/address_fr.rb#34
  def region; end

  # source://ffaker//lib/ffaker/address_fr.rb#16
  def street_address; end
end

# source://ffaker//lib/ffaker/address_fr.rb#11
FFaker::AddressFR::MOD = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_fr.rb#10
FFaker::AddressFR::NUM = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_fr.rb#14
FFaker::AddressFR::POSTAL_CODE_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_fr.rb#12
FFaker::AddressFR::SEP = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_fr.rb#13
FFaker::AddressFR::TYPE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_gr.rb#4
module FFaker::AddressGR
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressGR

  # source://ffaker//lib/ffaker/address_gr.rb#22
  def city; end

  # source://ffaker//lib/ffaker/address_gr.rb#18
  def region; end

  # source://ffaker//lib/ffaker/address_gr.rb#34
  def street_address; end

  # source://ffaker//lib/ffaker/address_gr.rb#26
  def street_name; end

  # source://ffaker//lib/ffaker/address_gr.rb#30
  def street_nbr; end

  # source://ffaker//lib/ffaker/address_gr.rb#14
  def zip_code; end
end

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::AddressGR::REGION = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_gr.rb#12
FFaker::AddressGR::STATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_gr.rb#11
FFaker::AddressGR::STREET_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_gr.rb#10
FFaker::AddressGR::STREET_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_id.rb#4
module FFaker::AddressID
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressID

  # source://ffaker//lib/ffaker/address_id.rb#24
  def city; end

  # source://ffaker//lib/ffaker/address_id.rb#16
  def state; end

  # source://ffaker//lib/ffaker/address_id.rb#20
  def state_abbr; end

  # source://ffaker//lib/ffaker/address_id.rb#32
  def street; end

  # source://ffaker//lib/ffaker/address_id.rb#28
  def street_prefix; end

  # source://ffaker//lib/ffaker/address_id.rb#12
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_id.rb#10
FFaker::AddressID::STREET_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_in.rb#4
module FFaker::AddressIN
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressIN

  # source://ffaker//lib/ffaker/address_in.rb#16
  def city; end

  # source://ffaker//lib/ffaker/address_in.rb#44
  def country; end

  # source://ffaker//lib/ffaker/address_in.rb#48
  def country_code; end

  # source://ffaker//lib/ffaker/address_in.rb#10
  def pincode; end

  # source://ffaker//lib/ffaker/address_in.rb#20
  def state; end

  # source://ffaker//lib/ffaker/address_in.rb#24
  def state_abbr; end

  # source://ffaker//lib/ffaker/address_in.rb#36
  def state_and_union_territory; end

  # source://ffaker//lib/ffaker/address_in.rb#40
  def state_and_union_territory_abbr; end

  # source://ffaker//lib/ffaker/address_in.rb#52
  def time_zone; end

  # source://ffaker//lib/ffaker/address_in.rb#28
  def union_territory; end

  # source://ffaker//lib/ffaker/address_in.rb#32
  def union_territory_abbr; end

  # source://ffaker//lib/ffaker/address_in.rb#10
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_it.rb#4
module FFaker::AddressIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AddressIT

  # source://ffaker//lib/ffaker/address_it.rb#21
  def city; end

  # source://ffaker//lib/ffaker/address_it.rb#25
  def full_address; end

  # source://ffaker//lib/ffaker/address_it.rb#17
  def postal_code; end

  # source://ffaker//lib/ffaker/address_it.rb#29
  def region; end

  # source://ffaker//lib/ffaker/address_it.rb#13
  def street_address; end
end

# source://ffaker//lib/ffaker/address_it.rb#8
FFaker::AddressIT::NUM = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_it.rb#11
FFaker::AddressIT::POSTAL_CODE_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_it.rb#9
FFaker::AddressIT::SEP = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_it.rb#10
FFaker::AddressIT::TYPE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ja.rb#4
module FFaker::AddressJA
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressJA

  # source://ffaker//lib/ffaker/address_ja.rb#13
  def address; end

  # source://ffaker//lib/ffaker/address_ja.rb#71
  def city; end

  # source://ffaker//lib/ffaker/address_ja.rb#75
  def county; end

  # source://ffaker//lib/ffaker/address_ja.rb#67
  def designated_city; end

  # source://ffaker//lib/ffaker/address_ja.rb#29
  def designated_city_address; end

  # source://ffaker//lib/ffaker/address_ja.rb#47
  def land_number; end

  # source://ffaker//lib/ffaker/address_ja.rb#22
  def other_address; end

  # source://ffaker//lib/ffaker/address_ja.rb#43
  def postal_code; end

  # source://ffaker//lib/ffaker/address_ja.rb#79
  def prefecture; end

  # source://ffaker//lib/ffaker/address_ja.rb#51
  def street; end

  # source://ffaker//lib/ffaker/address_ja.rb#55
  def tokyo_ward; end

  # source://ffaker//lib/ffaker/address_ja.rb#36
  def tokyo_ward_address; end

  # source://ffaker//lib/ffaker/address_ja.rb#63
  def village; end

  # source://ffaker//lib/ffaker/address_ja.rb#59
  def ward; end
end

# source://ffaker//lib/ffaker/address_ja.rb#11
FFaker::AddressJA::LAND_NUMBER_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ja.rb#10
FFaker::AddressJA::ZIP_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#4
module FFaker::AddressKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AddressKR

  # source://ffaker//lib/ffaker/address_kr.rb#55
  def address_detail; end

  # source://ffaker//lib/ffaker/address_kr.rb#71
  def borough; end

  # source://ffaker//lib/ffaker/address_kr.rb#51
  def building_name; end

  # source://ffaker//lib/ffaker/address_kr.rb#75
  def city; end

  # source://ffaker//lib/ffaker/address_kr.rb#34
  def land_address; end

  # source://ffaker//lib/ffaker/address_kr.rb#41
  def land_number; end

  # source://ffaker//lib/ffaker/address_kr.rb#83
  def metropolitan_city; end

  # source://ffaker//lib/ffaker/address_kr.rb#21
  def old_postal_code; end

  # source://ffaker//lib/ffaker/address_kr.rb#17
  def postal_code; end

  # source://ffaker//lib/ffaker/address_kr.rb#79
  def province; end

  # source://ffaker//lib/ffaker/address_kr.rb#25
  def road_addess; end

  # source://ffaker//lib/ffaker/address_kr.rb#63
  def street; end

  # source://ffaker//lib/ffaker/address_kr.rb#67
  def town; end
end

# source://ffaker//lib/ffaker/address_kr.rb#8
FFaker::AddressKR::BUILDING_DONGS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#9
FFaker::AddressKR::BUILDING_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#12
FFaker::AddressKR::METROPOLITAN_CITIES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#14
FFaker::AddressKR::PROVINCES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#10
FFaker::AddressKR::STREET_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_kr.rb#11
FFaker::AddressKR::TOWN_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_mx.rb#4
module FFaker::AddressMX
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AddressMX

  # source://ffaker//lib/ffaker/address_mx.rb#25
  def municipality(st_abbr = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_mx.rb#12
  def postal_code; end

  # source://ffaker//lib/ffaker/address_mx.rb#16
  def state; end

  # source://ffaker//lib/ffaker/address_mx.rb#20
  def state_abbr(st_name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_mx.rb#8
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_nl.rb#4
module FFaker::AddressNL
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressNL

  # source://ffaker//lib/ffaker/address_nl.rb#23
  def city; end

  # source://ffaker//lib/ffaker/address_nl.rb#10
  def postal_code; end

  # source://ffaker//lib/ffaker/address_nl.rb#27
  def province; end

  # source://ffaker//lib/ffaker/address_nl.rb#18
  def street_name; end

  # source://ffaker//lib/ffaker/address_nl.rb#14
  def zip_code; end

  private

  # source://ffaker//lib/ffaker/address_nl.rb#33
  def random_type_of_street; end
end

# Inspirations:
# TERYT registry, available at: http://www.stat.gov.pl/broker/access/index.jspa
#
# source://ffaker//lib/ffaker/address_pl.rb#6
module FFaker::AddressPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AddressPL

  # source://ffaker//lib/ffaker/address_pl.rb#58
  def building_number; end

  # source://ffaker//lib/ffaker/address_pl.rb#54
  def city; end

  # Full Polish address with country name in French (according to Universal Postal Union).
  #
  # source://ffaker//lib/ffaker/address_pl.rb#14
  def full_address(include_country = T.unsafe(nil), include_secondary = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_pl.rb#69
  def postal_code; end

  # A voivodeship is an administrative area in Poland - a Polish equivalent of state.
  #
  # source://ffaker//lib/ffaker/address_pl.rb#39
  def province; end

  # source://ffaker//lib/ffaker/address_pl.rb#62
  def secondary_number; end

  # source://ffaker//lib/ffaker/address_pl.rb#34
  def square; end

  # source://ffaker//lib/ffaker/address_pl.rb#79
  def square_prefix; end

  # A voivodeship is an administrative area in Poland - a Polish equivalent of state.
  #
  # source://ffaker//lib/ffaker/address_pl.rb#39
  def state; end

  # source://ffaker//lib/ffaker/address_pl.rb#30
  def street; end

  # source://ffaker//lib/ffaker/address_pl.rb#20
  def street_address(include_secondary = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_pl.rb#26
  def street_name; end

  # source://ffaker//lib/ffaker/address_pl.rb#75
  def street_prefix; end

  # A voivodeship is an administrative area in Poland - a Polish equivalent of state.
  #
  # source://ffaker//lib/ffaker/address_pl.rb#39
  def voivodeship; end

  # source://ffaker//lib/ffaker/address_pl.rb#46
  def voivodeship_abbr; end

  # source://ffaker//lib/ffaker/address_pl.rb#50
  def voivodeship_capital_city; end

  # source://ffaker//lib/ffaker/address_pl.rb#69
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_pl.rb#11
FFaker::AddressPL::SQUARE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_pl.rb#10
FFaker::AddressPL::STREET_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ru.rb#4
module FFaker::AddressRU
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressRU

  # source://ffaker//lib/ffaker/address_ru.rb#13
  def city; end

  # source://ffaker//lib/ffaker/address_ru.rb#17
  def province; end

  # source://ffaker//lib/ffaker/address_ru.rb#29
  def street_address; end

  # source://ffaker//lib/ffaker/address_ru.rb#25
  def street_name; end

  # source://ffaker//lib/ffaker/address_ru.rb#33
  def street_number; end

  # source://ffaker//lib/ffaker/address_ru.rb#21
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_ru.rb#10
FFaker::AddressRU::POSTAL_CODE_FORMAT = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ru.rb#11
FFaker::AddressRU::STREET_NBR_FORMATS = T.let(T.unsafe(nil), Array)

# List of countries from http://sv.wikipedia.org/wiki/V%C3%A4rldens_l%C3%A4nder#Lista_.C3.B6ver_l.C3.A4nder
# The streetnames are all the roads in Stockholm that contains "väg" or "gata"
# List of cities are from http://sv.wikipedia.org/wiki/Sveriges_kommuner
#
# source://ffaker//lib/ffaker/address_se.rb#7
module FFaker::AddressSE
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressSE

  # source://ffaker//lib/ffaker/address_se.rb#20
  def city; end

  # source://ffaker//lib/ffaker/address_se.rb#36
  def full_address; end

  # source://ffaker//lib/ffaker/address_se.rb#40
  def random_country; end

  # source://ffaker//lib/ffaker/address_se.rb#28
  def street_address; end

  # source://ffaker//lib/ffaker/address_se.rb#24
  def street_name; end

  # source://ffaker//lib/ffaker/address_se.rb#32
  def street_nbr; end

  # source://ffaker//lib/ffaker/address_se.rb#16
  def zip_code; end
end

# source://ffaker//lib/ffaker/address_se.rb#14
FFaker::AddressSE::STREET_NBR_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_se.rb#13
FFaker::AddressSE::ZIP_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_sn.rb#4
module FFaker::AddressSN
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressSN

  # source://ffaker//lib/ffaker/address_sn.rb#18
  def arrondissement; end

  # source://ffaker//lib/ffaker/address_sn.rb#14
  def departement; end

  # source://ffaker//lib/ffaker/address_sn.rb#10
  def region; end
end

# source://ffaker//lib/ffaker/address_ua.rb#4
module FFaker::AddressUA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AddressUA

  # source://ffaker//lib/ffaker/address_ua.rb#42
  def appartment_number; end

  # source://ffaker//lib/ffaker/address_ua.rb#38
  def building_number; end

  # source://ffaker//lib/ffaker/address_ua.rb#16
  def city; end

  # source://ffaker//lib/ffaker/address_ua.rb#12
  def country; end

  # source://ffaker//lib/ffaker/address_ua.rb#20
  def province; end

  # source://ffaker//lib/ffaker/address_ua.rb#32
  def street_address(include_secondary = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_ua.rb#28
  def street_name; end

  # source://ffaker//lib/ffaker/address_ua.rb#24
  def zip_code; end

  private

  # source://ffaker//lib/ffaker/address_ua.rb#48
  def numerify_mask(masks_arr, allow_first_zero = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/address_ua.rb#10
FFaker::AddressUA::APPARTMENT_NUMBER_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ua.rb#9
FFaker::AddressUA::BUILDING_NUMBER_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_ua.rb#8
FFaker::AddressUA::POSTAL_CODE_FORMAT = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_uk.rb#4
module FFaker::AddressUK
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressUK

  # source://ffaker//lib/ffaker/address_uk.rb#17
  def country; end

  # source://ffaker//lib/ffaker/address_uk.rb#13
  def county; end

  # source://ffaker//lib/ffaker/address_uk.rb#21
  def postcode; end
end

# source://ffaker//lib/ffaker/address_uk.rb#10
FFaker::AddressUK::COUNTRY = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_uk.rb#11
FFaker::AddressUK::POSTCODE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_us.rb#4
module FFaker::AddressUS
  include ::FFaker::Address
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Address
  extend ::FFaker::AddressUS

  # source://ffaker//lib/ffaker/address_us.rb#34
  def continental_state; end

  # source://ffaker//lib/ffaker/address_us.rb#38
  def continental_state_abbr; end

  # source://ffaker//lib/ffaker/address_us.rb#18
  def state; end

  # source://ffaker//lib/ffaker/address_us.rb#22
  def state_abbr(st_name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/address_us.rb#30
  def state_and_territories_abbr; end

  # source://ffaker//lib/ffaker/address_us.rb#14
  def zip_code; end

  private

  # source://ffaker//lib/ffaker/address_us.rb#54
  def capitalize_all_words(string); end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/address_us.rb#44
  def check_state_existence(state_name); end

  # source://ffaker//lib/ffaker/address_us.rb#50
  def find_abbr(state); end
end

# source://ffaker//lib/ffaker/address_us.rb#11
FFaker::AddressUS::CONTINENTAL_STATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_us.rb#12
FFaker::AddressUS::CONTINENTAL_STATE_ABBR = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::AddressUS::STATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::AddressUS::STATE_ABBR = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/address_us.rb#10
FFaker::AddressUS::ZIP_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/airline.rb#4
module FFaker::Airline
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Airline

  # source://ffaker//lib/ffaker/airline.rb#12
  def flight_number; end

  # source://ffaker//lib/ffaker/airline.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/animal.rb#4
module FFaker::Animal
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Animal

  # @deprecated US animals name. Moved into {AnimalUS}
  #
  # source://ffaker//lib/ffaker/animal.rb#9
  def common_name; end
end

# source://ffaker//lib/ffaker/animal_br.rb#4
module FFaker::AnimalBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AnimalBR

  # source://ffaker//lib/ffaker/animal_br.rb#8
  def common_name; end
end

# source://ffaker//lib/ffaker/animal_cn.rb#4
module FFaker::AnimalCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AnimalCN

  # source://ffaker//lib/ffaker/animal_cn.rb#8
  def common_name; end
end

# source://ffaker//lib/ffaker/animal_es.rb#4
module FFaker::AnimalES
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AnimalES

  # source://ffaker//lib/ffaker/animal_es.rb#8
  def common_name; end
end

# Inspirations:
# https://www.ekologia.pl/wiedza/zwierzeta/
#
# source://ffaker//lib/ffaker/animal_pl.rb#6
module FFaker::AnimalPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils

  private

  # source://ffaker//lib/ffaker/animal_pl.rb#11
  def common_name; end

  class << self
    # source://ffaker//lib/ffaker/animal_pl.rb#11
    def common_name; end
  end
end

# source://ffaker//lib/ffaker/animal_us.rb#4
module FFaker::AnimalUS
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::AnimalUS

  # source://ffaker//lib/ffaker/animal_us.rb#8
  def common_name; end
end

# source://ffaker//lib/ffaker/utils/array_utils.rb#6
module FFaker::ArrayUtils
  extend ::FFaker::RandomUtils

  # source://ffaker//lib/ffaker/utils/array_utils.rb#45
  def freeze_all; end

  # source://ffaker//lib/ffaker/utils/array_utils.rb#40
  def rand; end

  # source://ffaker//lib/ffaker/utils/array_utils.rb#35
  def random_pick(num); end

  # source://ffaker//lib/ffaker/utils/array_utils.rb#49
  def shuffle; end

  class << self
    # source://ffaker//lib/ffaker/utils/array_utils.rb#9
    def const_array(argument); end

    # source://ffaker//lib/ffaker/utils/array_utils.rb#25
    def freeze_all(array); end

    # source://ffaker//lib/ffaker/utils/array_utils.rb#20
    def rand(array); end

    # source://ffaker//lib/ffaker/utils/array_utils.rb#15
    def random_pick(array, num); end

    # source://ffaker//lib/ffaker/utils/array_utils.rb#31
    def shuffle(array); end
  end
end

# source://ffaker//lib/ffaker/avatar.rb#4
module FFaker::Avatar
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Avatar

  # source://ffaker//lib/ffaker/avatar.rb#10
  def image(*args, slug: T.unsafe(nil), size: T.unsafe(nil), format: T.unsafe(nil), bgset: T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/avatar.rb#26
  def check_passed_params(size, format, bgset); end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/avatar.rb#40
  def invalid_background_number; end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/avatar.rb#36
  def invalid_format_error; end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/avatar.rb#32
  def invalid_size_error; end
end

# source://ffaker//lib/ffaker/avatar.rb#8
FFaker::Avatar::SUPPORTED_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker.rb#12
FFaker::BASE_LIB_PATH = T.let(T.unsafe(nil), String)

# Thanks to http://baconipsum.com/
#
# source://ffaker//lib/ffaker/bacon_ipsum.rb#5
module FFaker::BaconIpsum
  include ::FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Lorem
  extend ::FFaker::BaconIpsum

  # source://ffaker//lib/ffaker/bacon_ipsum.rb#11
  def word; end

  # source://ffaker//lib/ffaker/bacon_ipsum.rb#15
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/bank.rb#4
module FFaker::Bank
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Bank

  # source://ffaker//lib/ffaker/bank.rb#98
  def card_expiry_date(year_range: T.unsafe(nil), year_latest: T.unsafe(nil), format: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/bank.rb#94
  def card_number; end

  # source://ffaker//lib/ffaker/bank.rb#102
  def card_type; end

  # source://ffaker//lib/ffaker/bank.rb#87
  def iban(country_code: T.unsafe(nil)); end

  private

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/bank.rb#112
  def check_country_existence(country_code); end

  # source://ffaker//lib/ffaker/bank.rb#108
  def formatify_iban(code); end
end

# source://ffaker//lib/ffaker/bank.rb#8
FFaker::Bank::COUNTRIES = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/bank_us.rb#4
module FFaker::BankUS
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::BankUS

  # source://ffaker//lib/ffaker/bank_us.rb#8
  def account_number(min_digits: T.unsafe(nil), max_digits: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/bank_us.rb#12
  def routing_number; end

  private

  # source://ffaker//lib/ffaker/bank_us.rb#21
  def generate_ninth_digit(num_string); end
end

# source://ffaker//lib/ffaker/book.rb#4
module FFaker::Book
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Book

  # source://ffaker//lib/ffaker/book.rb#21
  def author; end

  # source://ffaker//lib/ffaker/book.rb#33
  def cover(*args, slug: T.unsafe(nil), size: T.unsafe(nil), format: T.unsafe(nil), bgset: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/book.rb#29
  def description(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/book.rb#17
  def genre; end

  # source://ffaker//lib/ffaker/book.rb#25
  def isbn; end

  # source://ffaker//lib/ffaker/book.rb#45
  def orly_cover(name = T.unsafe(nil), book_author = T.unsafe(nil), top_text = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/book.rb#10
  def title; end

  private

  # source://ffaker//lib/ffaker/book.rb#56
  def simple_title; end

  # source://ffaker//lib/ffaker/book.rb#60
  def title_with_prefix; end
end

# source://ffaker//lib/ffaker/boolean.rb#4
module FFaker::Boolean
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Boolean

  # source://ffaker//lib/ffaker/boolean.rb#8
  def maybe; end

  # source://ffaker//lib/ffaker/boolean.rb#8
  def random; end

  # source://ffaker//lib/ffaker/boolean.rb#8
  def sample; end
end

# source://ffaker//lib/ffaker/cheesy_lingo.rb#4
module FFaker::CheesyLingo
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CheesyLingo

  # source://ffaker//lib/ffaker/cheesy_lingo.rb#33
  def paragraph(number_of_phrases = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/cheesy_lingo.rb#25
  def sentence; end

  # source://ffaker//lib/ffaker/cheesy_lingo.rb#13
  def title; end

  # source://ffaker//lib/ffaker/cheesy_lingo.rb#17
  def word; end

  # source://ffaker//lib/ffaker/cheesy_lingo.rb#21
  def words(count = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/cheesy_lingo.rb#10
FFaker::CheesyLingo::TITLE_1 = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/cheesy_lingo.rb#11
FFaker::CheesyLingo::TITLE_2 = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/code.rb#4
module FFaker::Code
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Code

  # source://ffaker//lib/ffaker/code.rb#25
  def ean; end

  # source://ffaker//lib/ffaker/code.rb#8
  def npi(legacy: T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/color.rb#4
module FFaker::Color
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Color

  # source://ffaker//lib/ffaker/color.rb#12
  def hex_code; end

  # source://ffaker//lib/ffaker/color.rb#32
  def hsl_array; end

  # source://ffaker//lib/ffaker/color.rb#36
  def hsl_list; end

  # source://ffaker//lib/ffaker/color.rb#40
  def hsla_array; end

  # source://ffaker//lib/ffaker/color.rb#44
  def hsla_list; end

  # source://ffaker//lib/ffaker/color.rb#8
  def name; end

  # source://ffaker//lib/ffaker/color.rb#16
  def rgb_array; end

  # source://ffaker//lib/ffaker/color.rb#20
  def rgb_list; end

  # source://ffaker//lib/ffaker/color.rb#24
  def rgba_array; end

  # source://ffaker//lib/ffaker/color.rb#28
  def rgba_list; end

  private

  # source://ffaker//lib/ffaker/color.rb#58
  def random_hue_value; end

  # source://ffaker//lib/ffaker/color.rb#54
  def random_opacity_value; end

  # source://ffaker//lib/ffaker/color.rb#62
  def random_percentage_string; end

  # source://ffaker//lib/ffaker/color.rb#50
  def random_rgb_value; end
end

# Inspiration:
# https://pl.wikipedia.org/wiki/Lista_kolor%C3%B3w
#
# source://ffaker//lib/ffaker/color_pl.rb#6
module FFaker::ColorPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::ColorPL

  # source://ffaker//lib/ffaker/color_pl.rb#10
  def name; end
end

# source://ffaker//lib/ffaker/color_ua.rb#4
module FFaker::ColorUA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::ColorUA

  # source://ffaker//lib/ffaker/color_ua.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/company.rb#4
module FFaker::Company
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Company

  # When a straight answer won't do, BS to the rescue!
  # Wordlist from http://dack.com/web/bullshit.html
  #
  # source://ffaker//lib/ffaker/company.rb#32
  def bs; end

  # Generate a buzzword-laden catch phrase.
  # Wordlist from http://www.1728.com/buzzword.htm
  #
  # source://ffaker//lib/ffaker/company.rb#26
  def catch_phrase; end

  # source://ffaker//lib/ffaker/company.rb#12
  def name; end

  # source://ffaker//lib/ffaker/company.rb#36
  def position; end

  # source://ffaker//lib/ffaker/company.rb#20
  def suffix; end
end

# source://ffaker//lib/ffaker/company.rb#10
FFaker::Company::POSITIONS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company.rb#9
FFaker::Company::POSITION_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company.rb#8
FFaker::Company::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_cn.rb#4
module FFaker::CompanyCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CompanyCN

  # source://ffaker//lib/ffaker/company_cn.rb#11
  def name; end

  # source://ffaker//lib/ffaker/company_cn.rb#19
  def suffix; end

  # source://ffaker//lib/ffaker/company_cn.rb#15
  def type; end
end

# source://ffaker//lib/ffaker/company_cn.rb#9
FFaker::CompanyCN::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_cn.rb#8
FFaker::CompanyCN::TYPES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_fr.rb#4
module FFaker::CompanyFR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CompanyFR

  # source://ffaker//lib/ffaker/company_fr.rb#10
  def name; end

  # Get a random French SIREN number. See more here https://fr.wikipedia.org/wiki/Syst%C3%A8me_d%27identification_du_r%C3%A9pertoire_des_entreprises
  #
  # source://ffaker//lib/ffaker/company_fr.rb#23
  def siren; end

  # Produces a company french siret number.
  #
  # source://ffaker//lib/ffaker/company_fr.rb#29
  def siret; end

  # source://ffaker//lib/ffaker/company_fr.rb#18
  def suffix; end
end

# source://ffaker//lib/ffaker/company_fr.rb#8
FFaker::CompanyFR::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_it.rb#4
module FFaker::CompanyIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CompanyIT

  # source://ffaker//lib/ffaker/company_it.rb#11
  def name; end

  # Calculated using the algorithm at https://it.wikipedia.org/wiki/Partita_IVA
  # to return a valid Partita IVA (Italian VAT number)
  #
  # @return a valid Italian VAT number (Partita IVA)
  #
  # source://ffaker//lib/ffaker/company_it.rb#30
  def partita_iva; end

  # source://ffaker//lib/ffaker/company_it.rb#23
  def prefix; end

  # source://ffaker//lib/ffaker/company_it.rb#19
  def suffix; end
end

# source://ffaker//lib/ffaker/company_it.rb#8
FFaker::CompanyIT::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_it.rb#9
FFaker::CompanyIT::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_ja.rb#4
module FFaker::CompanyJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CompanyJA

  # source://ffaker//lib/ffaker/company_ja.rb#12
  def name; end

  # source://ffaker//lib/ffaker/company_ja.rb#20
  def position; end
end

# source://ffaker//lib/ffaker/company_ja.rb#9
FFaker::CompanyJA::DETAILED_TYPES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_ja.rb#10
FFaker::CompanyJA::POSITIONS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_ja.rb#8
FFaker::CompanyJA::TYPES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/company_se.rb#4
module FFaker::CompanySE
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CompanySE

  # source://ffaker//lib/ffaker/company_se.rb#10
  def name; end

  # source://ffaker//lib/ffaker/company_se.rb#19
  def suffix; end
end

# source://ffaker//lib/ffaker/company_se.rb#8
FFaker::CompanySE::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/conference.rb#4
module FFaker::Conference
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Conference

  # source://ffaker//lib/ffaker/conference.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/courses_fr.rb#4
module FFaker::CoursesFR; end

# source://ffaker//lib/ffaker/courses_fr.rb#5
module FFaker::CoursesFR::Mathematiques
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CoursesFR::Mathematiques

  # source://ffaker//lib/ffaker/courses_fr.rb#9
  def lesson; end
end

# source://ffaker//lib/ffaker/courses_fr.rb#14
module FFaker::CoursesFR::Philosophie
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::CoursesFR::Philosophie

  # source://ffaker//lib/ffaker/courses_fr.rb#18
  def lesson; end
end

# source://ffaker//lib/ffaker/crypto.rb#6
module FFaker::Crypto
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Crypto

  # source://ffaker//lib/ffaker/crypto.rb#10
  def sha256; end
end

# source://ffaker//lib/ffaker/currency.rb#4
module FFaker::Currency
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Currency

  # source://ffaker//lib/ffaker/currency.rb#8
  def code; end

  # source://ffaker//lib/ffaker/currency.rb#12
  def name; end

  # source://ffaker//lib/ffaker/currency.rb#16
  def symbol; end
end

# source://ffaker//lib/ffaker/date.rb#6
module FFaker::Date
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Date

  # Generates a random date up to `days` days in the past
  #
  # source://ffaker//lib/ffaker/date.rb#16
  def backward(days = T.unsafe(nil)); end

  # Generates a random date between 2 dates
  #
  # source://ffaker//lib/ffaker/date.rb#11
  def between(from, to); end

  # Random birthday date (maximum age between 18 and 65)
  # Keyword arguments: min_age, max_age
  #
  # source://ffaker//lib/ffaker/date.rb#33
  def birthday(min_age: T.unsafe(nil), max_age: T.unsafe(nil)); end

  # Generates a random date up to `days` days in the future
  #
  # source://ffaker//lib/ffaker/date.rb#24
  def forward(days = T.unsafe(nil)); end
end

# Thanks to Snoop Dogg
#
# source://ffaker//lib/ffaker/dizzle_ipsum.rb#5
module FFaker::DizzleIpsum
  extend ::FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::DizzleIpsum

  # source://ffaker//lib/ffaker/dizzle_ipsum.rb#11
  def word; end

  # source://ffaker//lib/ffaker/dizzle_ipsum.rb#15
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/education.rb#4
module FFaker::Education
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Education

  # source://ffaker//lib/ffaker/education.rb#21
  def degree; end

  # source://ffaker//lib/ffaker/education.rb#17
  def degree_short; end

  # source://ffaker//lib/ffaker/education.rb#25
  def major; end

  # source://ffaker//lib/ffaker/education.rb#40
  def school; end

  # source://ffaker//lib/ffaker/education.rb#33
  def school_generic_name; end

  # source://ffaker//lib/ffaker/education.rb#29
  def school_name; end
end

# source://ffaker//lib/ffaker/education.rb#8
FFaker::Education::MAJOR_ADJ = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education.rb#13
FFaker::Education::SCHOOL_ADJ = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education.rb#12
FFaker::Education::SCHOOL_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education.rb#14
FFaker::Education::SCHOOL_TYPE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education.rb#15
FFaker::Education::SCHOOL_UNI = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education_cn.rb#4
module FFaker::EducationCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::EducationCN

  # source://ffaker//lib/ffaker/education_cn.rb#13
  def degree; end

  # source://ffaker//lib/ffaker/education_cn.rb#21
  def location; end

  # source://ffaker//lib/ffaker/education_cn.rb#17
  def major; end

  # source://ffaker//lib/ffaker/education_cn.rb#29
  def school; end
end

# source://ffaker//lib/ffaker/education_cn.rb#8
FFaker::EducationCN::DEGREE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education_cn.rb#9
FFaker::EducationCN::DEGREE_SUFFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education_cn.rb#10
FFaker::EducationCN::POSITION = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/education_cn.rb#11
FFaker::EducationCN::SCHOOL_UNI = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/filesystem.rb#4
module FFaker::Filesystem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Filesystem

  # source://ffaker//lib/ffaker/filesystem.rb#16
  def directory(directory_separator = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/filesystem.rb#8
  def extension; end

  # source://ffaker//lib/ffaker/filesystem.rb#20
  def file_name(*args, dir: T.unsafe(nil), name: T.unsafe(nil), ext: T.unsafe(nil), directory_separator: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/filesystem.rb#12
  def mime_type; end
end

# source://ffaker//lib/ffaker/food.rb#4
module FFaker::Food
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Food

  # source://ffaker//lib/ffaker/food.rb#16
  def fruit; end

  # source://ffaker//lib/ffaker/food.rb#24
  def herb_or_spice; end

  # source://ffaker//lib/ffaker/food.rb#8
  def ingredient; end

  # source://ffaker//lib/ffaker/food.rb#20
  def meat; end

  # source://ffaker//lib/ffaker/food.rb#12
  def vegetable; end
end

# source://ffaker//lib/ffaker/food_pl.rb#4
module FFaker::FoodPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::FoodPL

  # source://ffaker//lib/ffaker/food_pl.rb#57
  def diary; end

  # source://ffaker//lib/ffaker/food_pl.rb#53
  def fermented; end

  # source://ffaker//lib/ffaker/food_pl.rb#8
  def food; end

  # source://ffaker//lib/ffaker/food_pl.rb#37
  def fruit; end

  # source://ffaker//lib/ffaker/food_pl.rb#41
  def herb; end

  # source://ffaker//lib/ffaker/food_pl.rb#49
  def meat; end

  # source://ffaker//lib/ffaker/food_pl.rb#61
  def preserves; end

  # source://ffaker//lib/ffaker/food_pl.rb#15
  def processed; end

  # source://ffaker//lib/ffaker/food_pl.rb#45
  def spice; end

  # source://ffaker//lib/ffaker/food_pl.rb#23
  def unprocessed; end

  # source://ffaker//lib/ffaker/food_pl.rb#33
  def vegetable; end
end

# source://ffaker//lib/ffaker/freedom_ipsum.rb#6
module FFaker::FreedomIpsum
  include ::FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Lorem
  extend ::FFaker::FreedomIpsum

  # source://ffaker//lib/ffaker/freedom_ipsum.rb#12
  def word; end

  # source://ffaker//lib/ffaker/freedom_ipsum.rb#16
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/game.rb#4
module FFaker::Game
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Game

  # source://ffaker//lib/ffaker/game.rb#15
  def category; end

  # source://ffaker//lib/ffaker/game.rb#19
  def mechanic; end

  # source://ffaker//lib/ffaker/game.rb#8
  def title; end

  private

  # source://ffaker//lib/ffaker/game.rb#25
  def simple_title; end

  # source://ffaker//lib/ffaker/game.rb#29
  def title_with_prefix; end
end

# source://ffaker//lib/ffaker/gender.rb#4
module FFaker::Gender
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Gender

  # source://ffaker//lib/ffaker/gender.rb#15
  def binary; end

  # source://ffaker//lib/ffaker/gender.rb#11
  def maybe; end

  # source://ffaker//lib/ffaker/gender.rb#11
  def random; end

  # source://ffaker//lib/ffaker/gender.rb#11
  def sample; end
end

# source://ffaker//lib/ffaker/gender.rb#9
FFaker::Gender::BINARY_GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender.rb#8
FFaker::Gender::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_br.rb#4
module FFaker::GenderBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderBR

  # source://ffaker//lib/ffaker/gender_br.rb#10
  def maybe; end

  # source://ffaker//lib/ffaker/gender_br.rb#10
  def random; end

  # source://ffaker//lib/ffaker/gender_br.rb#10
  def sample; end
end

# source://ffaker//lib/ffaker/gender_br.rb#8
FFaker::GenderBR::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_cn.rb#4
module FFaker::GenderCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderCN

  # source://ffaker//lib/ffaker/gender_cn.rb#10
  def maybe; end

  # source://ffaker//lib/ffaker/gender_cn.rb#10
  def random; end

  # source://ffaker//lib/ffaker/gender_cn.rb#10
  def sample; end
end

# source://ffaker//lib/ffaker/gender_cn.rb#8
FFaker::GenderCN::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_id.rb#4
module FFaker::GenderID
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderID

  # source://ffaker//lib/ffaker/gender_id.rb#10
  def maybe; end

  # source://ffaker//lib/ffaker/gender_id.rb#10
  def random; end

  # source://ffaker//lib/ffaker/gender_id.rb#10
  def sample; end
end

# source://ffaker//lib/ffaker/gender_id.rb#8
FFaker::GenderID::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_it.rb#4
module FFaker::GenderIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderIT

  # source://ffaker//lib/ffaker/gender_it.rb#10
  def maybe; end

  # source://ffaker//lib/ffaker/gender_it.rb#10
  def random; end

  # source://ffaker//lib/ffaker/gender_it.rb#10
  def sample; end
end

# source://ffaker//lib/ffaker/gender_it.rb#8
FFaker::GenderIT::GENDERS = T.let(T.unsafe(nil), Array)

# https://ja.wikipedia.org/wiki/%E6%80%A7_(%E7%94%9F%E7%89%A9%E5%AD%A6)
#
# source://ffaker//lib/ffaker/gender_ja.rb#5
module FFaker::GenderJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderJA

  # source://ffaker//lib/ffaker/gender_ja.rb#11
  def maybe; end

  # source://ffaker//lib/ffaker/gender_ja.rb#11
  def random; end

  # source://ffaker//lib/ffaker/gender_ja.rb#11
  def sample; end
end

# source://ffaker//lib/ffaker/gender_ja.rb#9
FFaker::GenderJA::GENDERS = T.let(T.unsafe(nil), Array)

# Inspirations:
# https://ja.wikipedia.org/wiki/%E6%80%A7_(%E7%94%9F%E7%89%A9%E5%AD%A6)
#
# source://ffaker//lib/ffaker/gender_jp.rb#6
module FFaker::GenderJP
  include ::FFaker::GenderJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderJA
end

# source://ffaker//lib/ffaker/gender_kr.rb#4
module FFaker::GenderKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderKR

  # source://ffaker//lib/ffaker/gender_kr.rb#10
  def maybe; end

  # source://ffaker//lib/ffaker/gender_kr.rb#10
  def random; end

  # source://ffaker//lib/ffaker/gender_kr.rb#10
  def sample; end
end

# source://ffaker//lib/ffaker/gender_kr.rb#8
FFaker::GenderKR::GENDERS = T.let(T.unsafe(nil), Array)

# Inspirations:
# https://pl.wikipedia.org/wiki/P%C5%82e%C4%87
#
# source://ffaker//lib/ffaker/gender_pl.rb#6
module FFaker::GenderPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderPL

  # source://ffaker//lib/ffaker/gender_pl.rb#12
  def maybe; end

  # source://ffaker//lib/ffaker/gender_pl.rb#12
  def random; end

  # source://ffaker//lib/ffaker/gender_pl.rb#12
  def sample; end
end

# source://ffaker//lib/ffaker/gender_pl.rb#10
FFaker::GenderPL::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_ru.rb#4
module FFaker::GenderRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::GenderRU

  # source://ffaker//lib/ffaker/gender_ru.rb#15
  def binary; end

  # source://ffaker//lib/ffaker/gender_ru.rb#11
  def maybe; end

  # source://ffaker//lib/ffaker/gender_ru.rb#11
  def random; end

  # source://ffaker//lib/ffaker/gender_ru.rb#11
  def sample; end
end

# source://ffaker//lib/ffaker/gender_ru.rb#9
FFaker::GenderRU::BINARY_GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/gender_ru.rb#8
FFaker::GenderRU::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/geolocation.rb#4
module FFaker::Geolocation
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Geolocation

  # source://ffaker//lib/ffaker/geolocation.rb#50
  def boxed_coords(upper_left, lower_right); end

  # source://ffaker//lib/ffaker/geolocation.rb#8
  def lat; end

  # source://ffaker//lib/ffaker/geolocation.rb#12
  def lng; end
end

# source://ffaker//lib/ffaker/geolocation.rb#16
FFaker::Geolocation::LATLNG = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/guid.rb#4
module FFaker::Guid
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Guid

  # source://ffaker//lib/ffaker/guid.rb#8
  def guid; end
end

# source://ffaker//lib/ffaker.rb#16
FFaker::HEX = T.let(T.unsafe(nil), Array)

# Loosely based on http://html-ipsum.com/
# Requires FFaker::Lorem module
#
# source://ffaker//lib/ffaker/html_ipsum.rb#6
module FFaker::HTMLIpsum
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::HTMLIpsum

  # source://ffaker//lib/ffaker/html_ipsum.rb#10
  def a(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#97
  def body; end

  # source://ffaker//lib/ffaker/html_ipsum.rb#25
  def dl(definitions = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#132
  def fancy_string(count = T.unsafe(nil), include_breaks = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#58
  def ol_long(items = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#50
  def ol_short(items = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#14
  def p(count = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#74
  def table(rows = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#66
  def ul_links(items = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#42
  def ul_long(items = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#34
  def ul_short(items = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/html_ipsum.rb#151
  def content_tag_for(element, content = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#178
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#182
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#170
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#174
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/html_ipsum.rb#162
  def word; end

  # source://ffaker//lib/ffaker/html_ipsum.rb#166
  def words(word_count = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/healthcare_ipsum.rb#4
module FFaker::HealthcareIpsum
  include ::FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Lorem
  extend ::FFaker::HealthcareIpsum

  # source://ffaker//lib/ffaker/healthcare_ipsum.rb#10
  def word; end

  # source://ffaker//lib/ffaker/healthcare_ipsum.rb#14
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/healthcare_ru.rb#4
module FFaker::HealthcareRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::HealthcareRU

  # source://ffaker//lib/ffaker/healthcare_ru.rb#8
  def doctor_specialization; end
end

# thanks to http://hipsteripsum.me
#
# source://ffaker//lib/ffaker/hipster_ipsum.rb#5
module FFaker::HipsterIpsum
  include ::FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Lorem
  extend ::FFaker::HipsterIpsum

  # source://ffaker//lib/ffaker/hipster_ipsum.rb#11
  def word; end

  # source://ffaker//lib/ffaker/hipster_ipsum.rb#15
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/identification.rb#4
module FFaker::Identification
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Identification

  # source://ffaker//lib/ffaker/identification.rb#14
  def drivers_license; end

  # source://ffaker//lib/ffaker/identification.rb#22
  def ethnicity; end

  # source://ffaker//lib/ffaker/identification.rb#26
  def gender; end

  # source://ffaker//lib/ffaker/identification.rb#18
  def ssn; end
end

# source://ffaker//lib/ffaker/identification.rb#8
FFaker::Identification::ETHNICITIES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification.rb#12
FFaker::Identification::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_br.rb#4
module FFaker::IdentificationBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationBR

  # source://ffaker//lib/ffaker/identification_br.rb#23
  def cnpj; end

  # source://ffaker//lib/ffaker/identification_br.rb#50
  def cnpj_verification_digits(cnpj); end

  # source://ffaker//lib/ffaker/identification_br.rb#12
  def cpf; end

  # source://ffaker//lib/ffaker/identification_br.rb#46
  def cpf_verification_digits(cpf); end

  # source://ffaker//lib/ffaker/identification_br.rb#42
  def gender; end

  # source://ffaker//lib/ffaker/identification_br.rb#29
  def pretty_cnpj; end

  # source://ffaker//lib/ffaker/identification_br.rb#18
  def pretty_cpf; end

  # source://ffaker//lib/ffaker/identification_br.rb#38
  def pretty_rg; end

  # source://ffaker//lib/ffaker/identification_br.rb#34
  def rg; end

  private

  # source://ffaker//lib/ffaker/identification_br.rb#56
  def document_verification_digits(verification_multipliers, document = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/identification_br.rb#10
FFaker::IdentificationBR::CNPJ_VERIFICATION_MULTIPLIERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_br.rb#9
FFaker::IdentificationBR::CPF_VERIFICATION_MULTIPLIERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_br.rb#8
FFaker::IdentificationBR::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_ec.rb#4
module FFaker::IdentificationEC
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationEC

  # https://medium.com/@bryansuarez/c%C3%B3mo-validar-c%C3%A9dula-y-ruc-en-ecuador-b62c5666186f
  # Cedula de Identificacion
  #
  # source://ffaker//lib/ffaker/identification_ec.rb#10
  def ci; end

  private

  # source://ffaker//lib/ffaker/identification_ec.rb#17
  def ci_digits; end

  # source://ffaker//lib/ffaker/identification_ec.rb#26
  def digits_sum(digits); end

  # source://ffaker//lib/ffaker/identification_ec.rb#21
  def last_digit(digits); end
end

# source://ffaker//lib/ffaker/identification_es.rb#4
module FFaker::IdentificationES
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationES

  # source://ffaker//lib/ffaker/identification_es.rb#10
  def gender; end
end

# source://ffaker//lib/ffaker/identification_es.rb#8
FFaker::IdentificationES::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_es_cl.rb#4
module FFaker::IdentificationESCL
  extend ::FFaker::IdentificationES
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationESCL

  # RUT is the Chilean ID, followed by format:  XX.XXX.XXX - Y
  # http://es.wikipedia.org/wiki/Rol_%C3%9Anico_Tributario
  #
  # The last Y is a modulo 11 validation code. In the case the result is 10, it will be
  # replaced by a 'K' character
  #
  # source://ffaker//lib/ffaker/identification_es_cl.rb#14
  def rut; end

  private

  # source://ffaker//lib/ffaker/identification_es_cl.rb#22
  def dv(rut); end
end

# source://ffaker//lib/ffaker/identification_es_co.rb#6
module FFaker::IdentificationESCO
  include ::FFaker::IdentificationES
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationES
  extend ::FFaker::IdentificationESCO

  # source://ffaker//lib/ffaker/identification_es_co.rb#29
  def blood_type; end

  # source://ffaker//lib/ffaker/identification_es_co.rb#22
  def driver_license_category; end

  # source://ffaker//lib/ffaker/identification_es_co.rb#15
  def drivers_license; end

  # source://ffaker//lib/ffaker/identification_es_co.rb#34
  def expedition_date; end

  # source://ffaker//lib/ffaker/identification_es_co.rb#15
  def id; end
end

# source://ffaker//lib/ffaker/identification_es_co.rb#12
FFaker::IdentificationESCO::BLOOD_TYPE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_es_co.rb#13
FFaker::IdentificationESCO::LICENSE_CATEGORY = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_in.rb#4
module FFaker::IdentificationIN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationIN

  # REF: https://en.wikipedia.org/wiki/Aadhaar
  #
  # source://ffaker//lib/ffaker/identification_in.rb#11
  def aadhaar; end
end

# source://ffaker//lib/ffaker/identification_in.rb#8
FFaker::IdentificationIN::AADHAAR_FORMAT = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_it.rb#4
module FFaker::IdentificationIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationIT

  # source://ffaker//lib/ffaker/identification_it.rb#14
  def drivers_license; end

  # source://ffaker//lib/ffaker/identification_it.rb#22
  def ethnicity; end

  # source://ffaker//lib/ffaker/identification_it.rb#26
  def gender; end

  # source://ffaker//lib/ffaker/identification_it.rb#18
  def ssn; end
end

# source://ffaker//lib/ffaker/identification_it.rb#8
FFaker::IdentificationIT::ETHNICITIES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_it.rb#12
FFaker::IdentificationIT::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_kr.rb#4
module FFaker::IdentificationKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationKR

  # Resident Registration Number
  # http://ko.wikipedia.org/wiki/%EC%A3%BC%EB%AF%BC%EB%93%B1%EB%A1%9D%EB%B2%88%ED%98%B8
  #
  # source://ffaker//lib/ffaker/identification_kr.rb#10
  def rrn; end
end

# source://ffaker//lib/ffaker/identification_mx.rb#4
module FFaker::IdentificationMX
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationMX

  # http://es.wikipedia.org/wiki/Clave_%C3%9Anica_de_Registro_de_Poblaci%C3%B3n
  # Clave Única de Registro de Población
  #
  # source://ffaker//lib/ffaker/identification_mx.rb#41
  def curp; end

  # http://es.wikipedia.org/wiki/Registro_Federal_de_Contribuyentes_(M%C3%A9xico)
  # Registro Federal de Contribuyentes (R.F.C.)
  #
  # source://ffaker//lib/ffaker/identification_mx.rb#35
  def rfc; end

  # http://es.wikipedia.org/wiki/Registro_Federal_de_Contribuyentes_(M%C3%A9xico)
  # Registro Federal de Contribuyentes (R.F.C.) para persona física
  #
  # source://ffaker//lib/ffaker/identification_mx.rb#14
  def rfc_persona_fisica; end

  # http://es.wikipedia.org/wiki/Registro_Federal_de_Contribuyentes_(M%C3%A9xico)
  # Registro Federal de Contribuyentes (R.F.C.) para persona moral
  #
  # source://ffaker//lib/ffaker/identification_mx.rb#27
  def rfc_persona_moral; end

  private

  # source://ffaker//lib/ffaker/identification_mx.rb#54
  def date; end
end

# source://ffaker//lib/ffaker/identification_mx.rb#8
FFaker::IdentificationMX::CONSONANTS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_mx.rb#10
FFaker::IdentificationMX::HOMOCLAVE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_mx.rb#9
FFaker::IdentificationMX::VOWELS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/identification_pl.rb#6
module FFaker::IdentificationPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationPL

  # Polish driver's licence number
  # https://en.wikipedia.org/wiki/Driving_licence_in_Poland
  #
  # source://ffaker//lib/ffaker/identification_pl.rb#33
  def drivers_license; end

  # Polish identity card number
  # https://en.wikipedia.org/wiki/Polish_identity_card
  #
  # source://ffaker//lib/ffaker/identification_pl.rb#22
  def id; end

  # Polish identity card number
  # https://en.wikipedia.org/wiki/Polish_identity_card
  #
  # source://ffaker//lib/ffaker/identification_pl.rb#22
  def identity_card; end

  # Polish national identification number
  # https://en.wikipedia.org/wiki/PESEL
  #
  # source://ffaker//lib/ffaker/identification_pl.rb#12
  def pesel; end

  private

  # source://ffaker//lib/ffaker/identification_pl.rb#39
  def generate_valid_pesel_date; end

  # source://ffaker//lib/ffaker/identification_pl.rb#71
  def identity_card_checksum(letter_part, number_part); end

  # source://ffaker//lib/ffaker/identification_pl.rb#45
  def pesel_birthdate(date); end

  # source://ffaker//lib/ffaker/identification_pl.rb#55
  def pesel_century_differentiator(year); end

  # source://ffaker//lib/ffaker/identification_pl.rb#65
  def pesel_checksum(date, serial_number); end
end

# source://ffaker//lib/ffaker/identification_tw.rb#4
module FFaker::IdentificationTW
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::IdentificationTW

  # Identity Card Number
  # https://en.wikipedia.org/wiki/National_identification_card_(Taiwan)#Identity_card_number
  #
  # source://ffaker//lib/ffaker/identification_tw.rb#13
  def id; end
end

# source://ffaker//lib/ffaker/identification_tw.rb#8
FFaker::IdentificationTW::AREA_CODE = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/image.rb#8
module FFaker::Image
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Image

  # `*args` for old format support, it will be removed with deprecation
  #
  # source://ffaker//lib/ffaker/image.rb#39
  def file(*args, size: T.unsafe(nil), format: T.unsafe(nil), bg_color: T.unsafe(nil), text_color: T.unsafe(nil), text: T.unsafe(nil)); end

  # `*args` for old format support, it will be removed with deprecation
  #
  # source://ffaker//lib/ffaker/image.rb#16
  def url(*args, size: T.unsafe(nil), format: T.unsafe(nil), bg_color: T.unsafe(nil), text_color: T.unsafe(nil), text: T.unsafe(nil)); end

  private

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/image.rb#66
  def check_format!(format); end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/image.rb#60
  def check_size!(size); end
end

# source://ffaker//lib/ffaker/image.rb#12
FFaker::Image::SUPPORTED_FORMATS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#4
module FFaker::Internet
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Internet

  # returns an email address of an online disposable email service (like tempinbox.com).
  # you can really send an email to these addresses an access it by going to the
  # service web pages.
  #
  # source://ffaker//lib/ffaker/internet.rb#25
  def disposable_email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#45
  def domain_name; end

  # source://ffaker//lib/ffaker/internet.rb#53
  def domain_suffix; end

  # source://ffaker//lib/ffaker/internet.rb#49
  def domain_word; end

  # source://ffaker//lib/ffaker/internet.rb#18
  def email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#29
  def free_email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#61
  def http_url; end

  # source://ffaker//lib/ffaker/internet.rb#65
  def ip_v4_address; end

  # source://ffaker//lib/ffaker/internet.rb#80
  def mac(delimiter = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#75
  def password(min_length = T.unsafe(nil), max_length = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#33
  def safe_email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#69
  def slug(words = T.unsafe(nil), glue = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet.rb#57
  def uri(protocol); end

  # source://ffaker//lib/ffaker/internet.rb#37
  def user_name(name = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/internet.rb#86
  def sanitize(string); end
end

# source://ffaker//lib/ffaker/internet.rb#8
FFaker::Internet::BYTE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#10
FFaker::Internet::DISPOSABLE_HOSTS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#13
FFaker::Internet::DOMAIN_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#9
FFaker::Internet::HOSTS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#16
FFaker::Internet::MAC_LIMIT = T.let(T.unsafe(nil), Integer)

# source://ffaker//lib/ffaker/internet.rb#14
FFaker::Internet::SAFE_DOMAIN_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet.rb#15
FFaker::Internet::SLUG_DELIMITERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet_se.rb#4
module FFaker::InternetSE
  include ::FFaker::Internet
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Internet
  extend ::FFaker::InternetSE

  # source://ffaker//lib/ffaker/internet_se.rb#82
  def company_name_single_word; end

  # Returns an email address of an online disposable email service
  # (like tempinbox.com). you can really send an email to these
  # addresses an access it by going to the service web pages.
  #
  # source://ffaker//lib/ffaker/internet_se.rb#25
  def disposable_email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet_se.rb#71
  def domain_name; end

  # source://ffaker//lib/ffaker/internet_se.rb#86
  def domain_suffix; end

  # source://ffaker//lib/ffaker/internet_se.rb#75
  def domain_word; end

  # source://ffaker//lib/ffaker/internet_se.rb#18
  def email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet_se.rb#29
  def free_email(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet_se.rb#94
  def http_url; end

  # source://ffaker//lib/ffaker/internet_se.rb#98
  def ip_v4_address; end

  # source://ffaker//lib/ffaker/internet_se.rb#66
  def join_to_user_name(array_parts); end

  # Used to fake login names were dot is not allowed
  #
  # source://ffaker//lib/ffaker/internet_se.rb#34
  def login_user_name; end

  # source://ffaker//lib/ffaker/internet_se.rb#102
  def slug(words = T.unsafe(nil), glue = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet_se.rb#90
  def uri(protocol); end

  # Mostly used for email creation
  #
  # source://ffaker//lib/ffaker/internet_se.rb#39
  def user_name(name = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/internet_se.rb#61
  def user_name_from_name(name); end

  # source://ffaker//lib/ffaker/internet_se.rb#45
  def user_name_random; end

  # source://ffaker//lib/ffaker/internet_se.rb#49
  def user_name_variant_long; end

  # source://ffaker//lib/ffaker/internet_se.rb#55
  def user_name_variant_short; end
end

# source://ffaker//lib/ffaker/internet_se.rb#10
FFaker::InternetSE::BYTE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet_se.rb#13
FFaker::InternetSE::DISPOSABLE_HOSTS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet_se.rb#12
FFaker::InternetSE::DOMAIN_SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet_se.rb#11
FFaker::InternetSE::HOSTS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/internet_se.rb#16
FFaker::InternetSE::SLUG_DELIMITERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/jo_jo.rb#4
module FFaker::JoJo
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JoJo

  # source://ffaker//lib/ffaker/jo_jo.rb#12
  def first_name; end

  # source://ffaker//lib/ffaker/jo_jo.rb#8
  def full_name; end

  # source://ffaker//lib/ffaker/jo_jo.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/jo_jo.rb#20
  def stand; end
end

# source://ffaker//lib/ffaker/job.rb#4
module FFaker::Job
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Job

  # source://ffaker//lib/ffaker/job.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_br.rb#4
module FFaker::JobBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobBR

  # source://ffaker//lib/ffaker/job_br.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_cn.rb#4
module FFaker::JobCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobCN

  # source://ffaker//lib/ffaker/job_cn.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_fr.rb#4
module FFaker::JobFR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobFR

  # source://ffaker//lib/ffaker/job_fr.rb#10
  def title; end
end

# source://ffaker//lib/ffaker/job_fr.rb#8
FFaker::JobFR::JOB_ADJECTIVES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/job_it.rb#4
module FFaker::JobIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobIT

  # source://ffaker//lib/ffaker/job_it.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_ja.rb#4
module FFaker::JobJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobJA

  # source://ffaker//lib/ffaker/job_ja.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_kr.rb#4
module FFaker::JobKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobKR

  # source://ffaker//lib/ffaker/job_kr.rb#8
  def title; end
end

# source://ffaker//lib/ffaker/job_vn.rb#4
module FFaker::JobVN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::JobVN

  # source://ffaker//lib/ffaker/job_vn.rb#8
  def title; end
end

# source://ffaker//lib/ffaker.rb#14
FFaker::LETTERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/locale.rb#4
module FFaker::Locale
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Locale

  # source://ffaker//lib/ffaker/locale.rb#8
  def code(given_language = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/locale.rb#15
  def language(given_code = T.unsafe(nil)); end
end

# Based on Perl's Text::Lorem
#
# source://ffaker//lib/ffaker/lorem.rb#5
module FFaker::Lorem
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Lorem

  # source://ffaker//lib/ffaker/lorem.rb#9
  def characters(character_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#37
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#41
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#22
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#31
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#22
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#31
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem.rb#14
  def word; end

  # source://ffaker//lib/ffaker/lorem.rb#18
  def words(num = T.unsafe(nil)); end
end

# Based on Perl's Text::Lorem
#
# source://ffaker//lib/ffaker/lorem_ar.rb#5
module FFaker::LoremAR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremAR

  # source://ffaker//lib/ffaker/lorem_ar.rb#32
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#36
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#17
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#26
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#17
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#26
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ar.rb#9
  def word; end

  # source://ffaker//lib/ffaker/lorem_ar.rb#13
  def words(num = T.unsafe(nil)); end
end

# Based on Perl's Text::Lorem
#
# source://ffaker//lib/ffaker/lorem_br.rb#5
module FFaker::LoremBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremBR

  # source://ffaker//lib/ffaker/lorem_br.rb#9
  def characters(character_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#37
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#41
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#22
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#31
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#22
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#31
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_br.rb#14
  def word; end

  # source://ffaker//lib/ffaker/lorem_br.rb#18
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_cn.rb#4
module FFaker::LoremCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremCN

  # source://ffaker//lib/ffaker/lorem_cn.rb#32
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_cn.rb#36
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_cn.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_cn.rb#22
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_cn.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_cn.rb#12
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_fr.rb#4
module FFaker::LoremFR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremFR

  # source://ffaker//lib/ffaker/lorem_fr.rb#31
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#35
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#16
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#25
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#25
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_fr.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_fr.rb#12
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_ie.rb#4
module FFaker::LoremIE
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremIE

  # source://ffaker//lib/ffaker/lorem_ie.rb#28
  def paragraph; end

  # source://ffaker//lib/ffaker/lorem_ie.rb#32
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ie.rb#16
  def phrase; end

  # source://ffaker//lib/ffaker/lorem_ie.rb#22
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ie.rb#36
  def question; end

  # source://ffaker//lib/ffaker/lorem_ie.rb#16
  def sentence; end

  # source://ffaker//lib/ffaker/lorem_ie.rb#22
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ie.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_ie.rb#12
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_it.rb#4
module FFaker::LoremIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremIT

  # source://ffaker//lib/ffaker/lorem_it.rb#31
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#35
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#16
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#25
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#25
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_it.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_it.rb#12
  def words(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_ja.rb#4
module FFaker::LoremJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremJA

  # source://ffaker//lib/ffaker/lorem_ja.rb#8
  def character; end

  # source://ffaker//lib/ffaker/lorem_ja.rb#12
  def characters(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ja.rb#32
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ja.rb#36
  def paragraphs(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ja.rb#24
  def sentence; end

  # source://ffaker//lib/ffaker/lorem_ja.rb#28
  def sentences(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ja.rb#16
  def word; end

  # source://ffaker//lib/ffaker/lorem_ja.rb#20
  def words(count = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/lorem_kr.rb#4
module FFaker::LoremKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremKR

  # source://ffaker//lib/ffaker/lorem_kr.rb#28
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#32
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#16
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#22
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#22
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_kr.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_kr.rb#12
  def words(num = T.unsafe(nil)); end
end

# Inspirations:
# https://pl.wiktionary.org
#
# source://ffaker//lib/ffaker/lorem_pl.rb#6
module FFaker::LoremPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremPL

  # source://ffaker//lib/ffaker/lorem_pl.rb#10
  def character; end

  # source://ffaker//lib/ffaker/lorem_pl.rb#14
  def characters(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#42
  def paragraph(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#46
  def paragraphs(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#26
  def phrase(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#36
  def phrases(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#26
  def sentence(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#36
  def sentences(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_pl.rb#18
  def word; end

  # source://ffaker//lib/ffaker/lorem_pl.rb#22
  def words(count = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/lorem_pl.rb#52
  def end_of_sentence; end
end

# source://ffaker//lib/ffaker/lorem_ru.rb#4
module FFaker::LoremRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremRU

  # source://ffaker//lib/ffaker/lorem_ru.rb#31
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#35
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#16
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#25
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#25
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_ru.rb#12
  def words(num = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/lorem_ru.rb#49
  def capitalize_russian(string); end

  # source://ffaker//lib/ffaker/lorem_ru.rb#41
  def sentence_type_mark; end
end

# source://ffaker//lib/ffaker/lorem_ua.rb#4
module FFaker::LoremUA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::LoremUA

  # source://ffaker//lib/ffaker/lorem_ua.rb#31
  def paragraph(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#35
  def paragraphs(paragraph_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#16
  def phrase(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#25
  def phrases(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#16
  def sentence(word_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#25
  def sentences(sentence_count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#8
  def word; end

  # source://ffaker//lib/ffaker/lorem_ua.rb#12
  def words(num = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/lorem_ua.rb#49
  def capitalize_ukrainian(string); end

  # source://ffaker//lib/ffaker/lorem_ua.rb#41
  def sentence_type_mark; end
end

# source://ffaker//lib/ffaker/utils/module_utils.rb#8
module FFaker::ModuleUtils
  include ::FFaker::RandomUtils

  # source://ffaker//lib/ffaker/utils/module_utils.rb#15
  def const_missing(const_name); end

  # source://ffaker//lib/ffaker/utils/module_utils.rb#11
  def k(arg); end

  # http://en.wikipedia.org/wiki/Luhn_algorithm
  #
  # source://ffaker//lib/ffaker/utils/module_utils.rb#40
  def luhn_check(number); end

  # source://ffaker//lib/ffaker/utils/module_utils.rb#27
  def underscore(string); end

  # source://ffaker//lib/ffaker/utils/module_utils.rb#35
  def unique(max_retries = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/movie.rb#4
module FFaker::Movie
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Movie

  # source://ffaker//lib/ffaker/movie.rb#25
  def rating; end

  # source://ffaker//lib/ffaker/movie.rb#16
  def title; end

  private

  # source://ffaker//lib/ffaker/movie.rb#39
  def maybe_adj_or_adv; end

  # source://ffaker//lib/ffaker/movie.rb#43
  def simple_title; end

  # source://ffaker//lib/ffaker/movie.rb#47
  def title_from_formula; end

  # source://ffaker//lib/ffaker/movie.rb#31
  def title_with_prefix; end

  # source://ffaker//lib/ffaker/movie.rb#35
  def title_with_suffix; end
end

# source://ffaker//lib/ffaker/movie.rb#12
FFaker::Movie::COLORS = T.let(T.unsafe(nil), Array)

# According to MPAA
#
# source://ffaker//lib/ffaker/movie.rb#14
FFaker::Movie::RATINGS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/movie.rb#8
FFaker::Movie::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/music.rb#4
module FFaker::Music
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Music

  # source://ffaker//lib/ffaker/music.rb#12
  def album; end

  # source://ffaker//lib/ffaker/music.rb#16
  def artist; end

  # source://ffaker//lib/ffaker/music.rb#8
  def genre; end

  # source://ffaker//lib/ffaker/music.rb#20
  def song; end
end

# source://ffaker//lib/ffaker/name.rb#4
module FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name

  # source://ffaker//lib/ffaker/name.rb#50
  def female_name_with_prefix; end

  # source://ffaker//lib/ffaker/name.rb#66
  def female_name_with_prefix_suffix; end

  # source://ffaker//lib/ffaker/name.rb#58
  def female_name_with_suffix; end

  # source://ffaker//lib/ffaker/name.rb#101
  def female_prefix; end

  # source://ffaker//lib/ffaker/name.rb#74
  def first_name; end

  # source://ffaker//lib/ffaker/name.rb#78
  def first_name_female; end

  # source://ffaker//lib/ffaker/name.rb#82
  def first_name_male; end

  # source://ffaker//lib/ffaker/name.rb#90
  def html_safe_last_name; end

  # source://ffaker//lib/ffaker/name.rb#19
  def html_safe_name; end

  # source://ffaker//lib/ffaker/name.rb#86
  def last_name; end

  # source://ffaker//lib/ffaker/name.rb#54
  def male_name_with_prefix; end

  # source://ffaker//lib/ffaker/name.rb#70
  def male_name_with_prefix_suffix; end

  # source://ffaker//lib/ffaker/name.rb#62
  def male_name_with_suffix; end

  # source://ffaker//lib/ffaker/name.rb#105
  def male_prefix; end

  # source://ffaker//lib/ffaker/name.rb#15
  def name; end

  # source://ffaker//lib/ffaker/name.rb#23
  def name_with_prefix; end

  # source://ffaker//lib/ffaker/name.rb#41
  def name_with_prefix_suffix; end

  # source://ffaker//lib/ffaker/name.rb#32
  def name_with_suffix; end

  # source://ffaker//lib/ffaker/name.rb#109
  def other_prefix; end

  # source://ffaker//lib/ffaker/name.rb#97
  def prefix; end

  # source://ffaker//lib/ffaker/name.rb#117
  def pronouns; end

  # source://ffaker//lib/ffaker/name.rb#113
  def suffix; end
end

# source://ffaker//lib/ffaker/name.rb#9
FFaker::Name::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name.rb#12
FFaker::Name::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::Name::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::Name::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name.rb#8
FFaker::Name::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name.rb#10
FFaker::Name::OTHER_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name.rb#11
FFaker::Name::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name.rb#13
FFaker::Name::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ar.rb#4
module FFaker::NameAR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameAR

  # source://ffaker//lib/ffaker/name_ar.rb#12
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_ar.rb#8
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_ar.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/name_ar.rb#24
  def name_female; end

  # source://ffaker//lib/ffaker/name_ar.rb#20
  def name_male; end
end

# source://ffaker//lib/ffaker/name_br.rb#4
module FFaker::NameBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameBR

  # source://ffaker//lib/ffaker/name_br.rb#26
  def female_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_br.rb#54
  def female_prefix; end

  # source://ffaker//lib/ffaker/name_br.rb#34
  def first_name; end

  # source://ffaker//lib/ffaker/name_br.rb#38
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_br.rb#42
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_br.rb#46
  def last_name; end

  # source://ffaker//lib/ffaker/name_br.rb#30
  def male_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_br.rb#58
  def male_prefix; end

  # source://ffaker//lib/ffaker/name_br.rb#13
  def name; end

  # source://ffaker//lib/ffaker/name_br.rb#17
  def name_with_prefix; end

  # source://ffaker//lib/ffaker/name_br.rb#50
  def prefix; end
end

# source://ffaker//lib/ffaker/name_br.rb#9
FFaker::NameBR::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_br.rb#11
FFaker::NameBR::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameBR::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameBR::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_br.rb#8
FFaker::NameBR::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_br.rb#10
FFaker::NameBR::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_cn.rb#4
module FFaker::NameCN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameCN

  # source://ffaker//lib/ffaker/name_cn.rb#12
  def first_name; end

  # source://ffaker//lib/ffaker/name_cn.rb#20
  def last_first; end

  # source://ffaker//lib/ffaker/name_cn.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/name_cn.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/name_cs.rb#4
module FFaker::NameCS
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameCS

  # Generates random first name
  # for_sex can be :male, :female. Defaults to :random
  #
  # source://ffaker//lib/ffaker/name_cs.rb#63
  def first_name(for_sex = T.unsafe(nil)); end

  # Generates random last name
  # for_sex can be :male, :female. Defaults to :random
  #
  # source://ffaker//lib/ffaker/name_cs.rb#57
  def last_name(for_sex = T.unsafe(nil)); end

  # Generates random full name which can contain prefix and suffix
  # Can be called with explicit sex (:male, :female), like:
  #
  #   FFaker::NameCS.name(:male)
  #
  # for_sex defaults to :random.
  #
  # source://ffaker//lib/ffaker/name_cs.rb#45
  def name(for_sex = T.unsafe(nil)); end

  # Generates random name prefix, an academic degree
  #
  # source://ffaker//lib/ffaker/name_cs.rb#68
  def prefix; end

  # Generates random name suffix, an academic degree
  #
  # source://ffaker//lib/ffaker/name_cs.rb#73
  def suffix; end

  # All names generated inside the block will have the same sex.
  # Can be called with explicit sex which will affect
  # all calls inside thee block:
  #
  #   FFaker::NameCS.with_same_sex(:female)
  #     person.last_name  = FFaker::NameCS.last_name
  #     person.first_name = FFaker::NameCS.first_name
  #   end
  #
  #   person.last_name    # => "Nováková"
  #   person.first_name   # => "Jana"
  #
  # source://ffaker//lib/ffaker/name_cs.rb#32
  def with_same_sex(sex = T.unsafe(nil)); end

  private

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/name_cs.rb#79
  def select_sex(sex); end
end

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameCS::FEMALE_FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameCS::FEMALE_LAST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_cs.rb#10
FFaker::NameCS::FIRST_NAMES = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/name_cs.rb#19
FFaker::NameCS::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_cs.rb#14
FFaker::NameCS::LAST_NAMES = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameCS::MALE_FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameCS::MALE_LAST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_cs.rb#18
FFaker::NameCS::SUFFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_da.rb#4
module FFaker::NameDA
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameDA

  # source://ffaker//lib/ffaker/name_da.rb#16
  def any_name; end

  # source://ffaker//lib/ffaker/name_da.rb#24
  def female_name; end

  # source://ffaker//lib/ffaker/name_da.rb#28
  def first_name(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_da.rb#38
  def last_name; end

  # source://ffaker//lib/ffaker/name_da.rb#20
  def male_name; end

  # source://ffaker//lib/ffaker/name_da.rb#12
  def name(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_da.rb#42
  def prefix; end

  private

  # source://ffaker//lib/ffaker/name_da.rb#48
  def generate_name(first_name); end
end

# source://ffaker//lib/ffaker/name_da.rb#10
FFaker::NameDA::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_de.rb#4
module FFaker::NameDE
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameDE

  # source://ffaker//lib/ffaker/name_de.rb#19
  def first_name; end

  # source://ffaker//lib/ffaker/name_de.rb#23
  def last_name; end

  # source://ffaker//lib/ffaker/name_de.rb#12
  def name; end

  # source://ffaker//lib/ffaker/name_de.rb#27
  def prefix; end
end

# source://ffaker//lib/ffaker/name_de.rb#10
FFaker::NameDE::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_es.rb#4
module FFaker::NameES
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils

  private

  # source://ffaker//lib/ffaker/name_es.rb#28
  def female_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_es.rb#56
  def female_prefix; end

  # source://ffaker//lib/ffaker/name_es.rb#36
  def first_name; end

  # source://ffaker//lib/ffaker/name_es.rb#40
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_es.rb#44
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_es.rb#48
  def last_name; end

  # source://ffaker//lib/ffaker/name_es.rb#32
  def male_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_es.rb#60
  def male_prefix; end

  # In Spain we use two surnames: The father's and the mother's
  #
  # source://ffaker//lib/ffaker/name_es.rb#15
  def name; end

  # source://ffaker//lib/ffaker/name_es.rb#19
  def name_with_prefix; end

  # source://ffaker//lib/ffaker/name_es.rb#52
  def prefix; end

  class << self
    # source://ffaker//lib/ffaker/name_es.rb#28
    def female_name_with_prefix; end

    # source://ffaker//lib/ffaker/name_es.rb#56
    def female_prefix; end

    # source://ffaker//lib/ffaker/name_es.rb#36
    def first_name; end

    # source://ffaker//lib/ffaker/name_es.rb#40
    def first_name_female; end

    # source://ffaker//lib/ffaker/name_es.rb#44
    def first_name_male; end

    # source://ffaker//lib/ffaker/name_es.rb#48
    def last_name; end

    # source://ffaker//lib/ffaker/name_es.rb#32
    def male_name_with_prefix; end

    # source://ffaker//lib/ffaker/name_es.rb#60
    def male_prefix; end

    # In Spain we use two surnames: The father's and the mother's
    #
    # source://ffaker//lib/ffaker/name_es.rb#15
    def name; end

    # source://ffaker//lib/ffaker/name_es.rb#19
    def name_with_prefix; end

    # source://ffaker//lib/ffaker/name_es.rb#52
    def prefix; end
  end
end

# source://ffaker//lib/ffaker/name_es.rb#10
FFaker::NameES::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_es.rb#12
FFaker::NameES::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameES::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameES::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_es.rb#9
FFaker::NameES::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_es.rb#11
FFaker::NameES::PREFIXES = T.let(T.unsafe(nil), Array)

# The names & first names in this module were found at this url
# https://github.com/fzaninotto/Faker/blob/master/src/Faker/Provider/fr_FR/Person.php
#
# source://ffaker//lib/ffaker/name_fr.rb#6
module FFaker::NameFR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameFR

  # source://ffaker//lib/ffaker/name_fr.rb#22
  def first_name; end

  # source://ffaker//lib/ffaker/name_fr.rb#18
  def last_name; end

  # source://ffaker//lib/ffaker/name_fr.rb#26
  def name; end

  # randomized? (FRENCH)  prefix!
  #
  # source://ffaker//lib/ffaker/name_fr.rb#14
  def prefix; end
end

# source://ffaker//lib/ffaker/name_fr.rb#10
FFaker::NameFR::PREFIX = T.let(T.unsafe(nil), Array)

# Generates names from Gambia West Africa
# Source: http://www.columbia.edu/~msj42/Common%20Gambian%20First%20Names.htm
#
# source://ffaker//lib/ffaker/name_ga.rb#6
module FFaker::NameGA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameGA

  # source://ffaker//lib/ffaker/name_ga.rb#12
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_ga.rb#16
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_ga.rb#20
  def last_name; end

  # source://ffaker//lib/ffaker/name_ga.rb#32
  def name; end

  # source://ffaker//lib/ffaker/name_ga.rb#28
  def name_female; end

  # source://ffaker//lib/ffaker/name_ga.rb#24
  def name_male; end
end

# source://ffaker//lib/ffaker/name_ga.rb#10
FFaker::NameGA::LAST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_gr.rb#4
module FFaker::NameGR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameGR

  # source://ffaker//lib/ffaker/name_gr.rb#51
  def female_first_name; end

  # source://ffaker//lib/ffaker/name_gr.rb#39
  def female_full_name; end

  # source://ffaker//lib/ffaker/name_gr.rb#55
  def female_last_name; end

  # Random first name (male or female)
  #
  # source://ffaker//lib/ffaker/name_gr.rb#28
  def first_name; end

  # Random full name (male or female). Arguments :male, :female, :any
  #
  # source://ffaker//lib/ffaker/name_gr.rb#9
  def full_name(gender = T.unsafe(nil)); end

  # Random last name (male or female)
  #
  # source://ffaker//lib/ffaker/name_gr.rb#20
  def last_name; end

  # source://ffaker//lib/ffaker/name_gr.rb#43
  def male_first_name; end

  # source://ffaker//lib/ffaker/name_gr.rb#35
  def male_full_name; end

  # source://ffaker//lib/ffaker/name_gr.rb#47
  def male_last_name; end

  # Random full name (male or female). Arguments :male, :female, :any
  #
  # source://ffaker//lib/ffaker/name_gr.rb#9
  def name(gender = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/name_id.rb#4
module FFaker::NameID
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameID

  # source://ffaker//lib/ffaker/name_id.rb#26
  def female_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_id.rb#54
  def female_prefix; end

  # source://ffaker//lib/ffaker/name_id.rb#34
  def first_name; end

  # source://ffaker//lib/ffaker/name_id.rb#38
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_id.rb#42
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_id.rb#46
  def last_name; end

  # source://ffaker//lib/ffaker/name_id.rb#30
  def male_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_id.rb#58
  def male_prefix; end

  # source://ffaker//lib/ffaker/name_id.rb#13
  def name; end

  # source://ffaker//lib/ffaker/name_id.rb#17
  def name_with_prefix; end

  # source://ffaker//lib/ffaker/name_id.rb#50
  def prefix; end
end

# source://ffaker//lib/ffaker/name_id.rb#9
FFaker::NameID::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_id.rb#11
FFaker::NameID::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameID::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameID::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_id.rb#8
FFaker::NameID::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_id.rb#10
FFaker::NameID::PREFIXES = T.let(T.unsafe(nil), Array)

# Generates names from India
# Source: https://www.momjunction.com/articles/popular-indian-last-names-for-your-baby_00334734/#gref
# Source: https://www.babycenter.in/a25024464/top-100-boy-names-in-india-in-2017
# Source: https://www.babycenter.in/a25024466/top-100-girl-names-in-india-in-2017
#
# source://ffaker//lib/ffaker/name_in.rb#8
module FFaker::NameIN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameIN

  # source://ffaker//lib/ffaker/name_in.rb#12
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_in.rb#16
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_in.rb#20
  def last_name; end

  # source://ffaker//lib/ffaker/name_in.rb#32
  def name; end

  # source://ffaker//lib/ffaker/name_in.rb#28
  def name_female; end

  # source://ffaker//lib/ffaker/name_in.rb#24
  def name_male; end
end

# source://ffaker//lib/ffaker/name_it.rb#4
module FFaker::NameIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameIT

  # source://ffaker//lib/ffaker/name_it.rb#20
  def first_name; end

  # source://ffaker//lib/ffaker/name_it.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/name_it.rb#24
  def name; end

  # randomized? (ITALIAN)  prefix!
  #
  # source://ffaker//lib/ffaker/name_it.rb#12
  def prefix; end
end

# source://ffaker//lib/ffaker/name_it.rb#8
FFaker::NameIT::PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ja.rb#4
module FFaker::NameJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameJA

  # source://ffaker//lib/ffaker/name_ja.rb#8
  def first_name; end

  # source://ffaker//lib/ffaker/name_ja.rb#16
  def last_first; end

  # source://ffaker//lib/ffaker/name_ja.rb#12
  def last_name; end

  # source://ffaker//lib/ffaker/name_ja.rb#16
  def name; end
end

# source://ffaker//lib/ffaker/name_kh.rb#4
module FFaker::NameKH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameKH

  # source://ffaker//lib/ffaker/name_kh.rb#16
  def first_name; end

  # source://ffaker//lib/ffaker/name_kh.rb#12
  def last_name; end

  # source://ffaker//lib/ffaker/name_kh.rb#8
  def name; end

  # source://ffaker//lib/ffaker/name_kh.rb#20
  def nick_name; end
end

# source://ffaker//lib/ffaker/name_kr.rb#4
module FFaker::NameKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameKR

  # source://ffaker//lib/ffaker/name_kr.rb#16
  def first_name; end

  # source://ffaker//lib/ffaker/name_kr.rb#8
  def last_first; end

  # source://ffaker//lib/ffaker/name_kr.rb#20
  def last_name; end

  # source://ffaker//lib/ffaker/name_kr.rb#8
  def name; end

  # source://ffaker//lib/ffaker/name_kr.rb#12
  def name_with_space; end
end

# guapolo github.com/guapolo
#
# source://ffaker//lib/ffaker/name_mx.rb#5
module FFaker::NameMX
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameMX

  # Female first name and possibly middle name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#61
  def female_name; end

  # source://ffaker//lib/ffaker/name_mx.rb#97
  def female_prefix; end

  # A single name according to gender parameter
  #
  # source://ffaker//lib/ffaker/name_mx.rb#69
  def first_name(gender = T.unsafe(nil)); end

  # Full name according to gender and prefix, possibly with middle_name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#16
  def full_name(gender = T.unsafe(nil), prefix = T.unsafe(nil)); end

  # Full name with no prefix according to gender, possibly with middle_name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#39
  def full_name_no_prefix(gender = T.unsafe(nil)); end

  # Full name with prefix according to gender, possibly with middle_name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#25
  def full_name_prefix(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_mx.rb#85
  def last_name; end

  # Male first name and possibly middle name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#53
  def male_name; end

  # source://ffaker//lib/ffaker/name_mx.rb#93
  def male_prefix; end

  # A single name according to gender parameter
  #
  # source://ffaker//lib/ffaker/name_mx.rb#69
  def middle_name(gender = T.unsafe(nil)); end

  # A single name according to gender parameter
  #
  # source://ffaker//lib/ffaker/name_mx.rb#69
  def name(gender = T.unsafe(nil)); end

  # Father's and mother's last name
  #
  # source://ffaker//lib/ffaker/name_mx.rb#81
  def paternal_last_names; end

  # source://ffaker//lib/ffaker/name_mx.rb#89
  def prefix; end
end

# source://ffaker//lib/ffaker/name_mx.rb#12
FFaker::NameMX::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_mx.rb#11
FFaker::NameMX::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_mx.rb#13
FFaker::NameMX::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_nb.rb#4
module FFaker::NameNB
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameNB

  # source://ffaker//lib/ffaker/name_nb.rb#19
  def first_name; end

  # source://ffaker//lib/ffaker/name_nb.rb#28
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_nb.rb#32
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_nb.rb#36
  def last_name; end

  # source://ffaker//lib/ffaker/name_nb.rb#12
  def name; end

  # source://ffaker//lib/ffaker/name_nb.rb#40
  def prefix; end
end

# source://ffaker//lib/ffaker/name_nb.rb#10
FFaker::NameNB::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_nl.rb#4
module FFaker::NameNL
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameNL

  # source://ffaker//lib/ffaker/name_nl.rb#19
  def first_name; end

  # source://ffaker//lib/ffaker/name_nl.rb#26
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_nl.rb#33
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_nl.rb#40
  def last_name; end

  # source://ffaker//lib/ffaker/name_nl.rb#12
  def name; end

  # source://ffaker//lib/ffaker/name_nl.rb#44
  def prefix; end
end

# source://ffaker//lib/ffaker/name_nl.rb#10
FFaker::NameNL::PREFIXES = T.let(T.unsafe(nil), Array)

# Philippine names based on http://en.wikipedia.org/wiki/Philippine_name
#
# source://ffaker//lib/ffaker/name_ph.rb#5
module FFaker::NamePH
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NamePH

  # source://ffaker//lib/ffaker/name_ph.rb#11
  def last_name; end

  # source://ffaker//lib/ffaker/name_ph.rb#18
  def name; end
end

# Inspirations:
# https://pl.wiktionary.org/wiki/Indeks:Polski_-_Imiona
# https://pl.wiktionary.org/wiki/Kategoria:Polskie_nazwiska_m%C4%99skie
#
# source://ffaker//lib/ffaker/name_pl.rb#7
module FFaker::NamePL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NamePL

  # source://ffaker//lib/ffaker/name_pl.rb#85
  def academic_degree_prefix; end

  # source://ffaker//lib/ffaker/name_pl.rb#57
  def female_first_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#49
  def female_full_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#61
  def female_last_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#41
  def female_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_pl.rb#77
  def female_prefix; end

  # Generates a random first name for a given gender (random by default).
  # Acceptable gender values: :random, :female, :male
  #
  # source://ffaker//lib/ffaker/name_pl.rb#37
  def first_name(gender = T.unsafe(nil)); end

  # Generates a random full name for a given gender (random by default).
  # Acceptable gender values: :random, :female, :male
  #
  # source://ffaker//lib/ffaker/name_pl.rb#19
  def full_name(gender = T.unsafe(nil)); end

  # Generates a random last name for a given gender (random by default).
  # Acceptable gender values: :random, :female, :male
  #
  # source://ffaker//lib/ffaker/name_pl.rb#31
  def last_name(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_pl.rb#65
  def male_first_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#53
  def male_full_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#69
  def male_last_name; end

  # source://ffaker//lib/ffaker/name_pl.rb#45
  def male_name_with_prefix; end

  # source://ffaker//lib/ffaker/name_pl.rb#81
  def male_prefix; end

  # Generates a random full name for a given gender (random by default).
  # Acceptable gender values: :random, :female, :male
  #
  # source://ffaker//lib/ffaker/name_pl.rb#19
  def name(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_pl.rb#25
  def name_with_prefix(gender = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/name_pl.rb#73
  def prefix; end

  private

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/name_pl.rb#91
  def name_for_gender(name_type, gender); end
end

# source://ffaker//lib/ffaker/name_pl.rb#14
FFaker::NamePL::ACADEMIC_DEGREE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_pl.rb#13
FFaker::NamePL::FEMALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_pl.rb#11
FFaker::NamePL::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_pl.rb#12
FFaker::NamePL::MALE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_pl.rb#15
FFaker::NamePL::PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ru.rb#4
module FFaker::NameRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameRU

  # source://ffaker//lib/ffaker/name_ru.rb#23
  def female_name; end

  # source://ffaker//lib/ffaker/name_ru.rb#15
  def first_name; end

  # source://ffaker//lib/ffaker/name_ru.rb#31
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_ru.rb#35
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_ru.rb#19
  def last_name; end

  # source://ffaker//lib/ffaker/name_ru.rb#47
  def last_name_female; end

  # source://ffaker//lib/ffaker/name_ru.rb#51
  def last_name_male; end

  # source://ffaker//lib/ffaker/name_ru.rb#27
  def male_name; end

  # source://ffaker//lib/ffaker/name_ru.rb#39
  def middle_name_female; end

  # source://ffaker//lib/ffaker/name_ru.rb#43
  def middle_name_male; end

  # source://ffaker//lib/ffaker/name_ru.rb#11
  def name; end
end

# source://ffaker//lib/ffaker/name_ru.rb#8
FFaker::NameRU::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameRU::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameRU::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ru.rb#9
FFaker::NameRU::LAST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameRU::LAST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameRU::LAST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_se.rb#4
module FFaker::NameSE
  include ::FFaker::Name
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Name
  extend ::FFaker::NameSE

  # source://ffaker//lib/ffaker/name_se.rb#19
  def first_name; end

  # source://ffaker//lib/ffaker/name_se.rb#28
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_se.rb#32
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_se.rb#36
  def last_name; end

  # source://ffaker//lib/ffaker/name_se.rb#12
  def name; end

  # source://ffaker//lib/ffaker/name_se.rb#40
  def prefix; end
end

# source://ffaker//lib/ffaker/name_se.rb#10
FFaker::NameSE::PREFIXES = T.let(T.unsafe(nil), Array)

# The names & first names in this module were found at this url:
# http://www.senegalaisement.com/senegal/noms_et_prenoms.html
#
# source://ffaker//lib/ffaker/name_sn.rb#6
module FFaker::NameSN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameSN

  # source://ffaker//lib/ffaker/name_sn.rb#21
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_sn.rb#17
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_sn.rb#13
  def last_name; end

  # source://ffaker//lib/ffaker/name_sn.rb#40
  def name_female; end

  # source://ffaker//lib/ffaker/name_sn.rb#33
  def name_male; end

  # source://ffaker//lib/ffaker/name_sn.rb#47
  def name_sn; end

  # source://ffaker//lib/ffaker/name_sn.rb#29
  def prefix_female; end

  # source://ffaker//lib/ffaker/name_sn.rb#25
  def prefix_male; end
end

# source://ffaker//lib/ffaker/name_sn.rb#10
FFaker::NameSN::PREFIX_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_sn.rb#11
FFaker::NameSN::PREFIX_MALE = T.let(T.unsafe(nil), Array)

# Source: http://www.thai-language.com/
#
# source://ffaker//lib/ffaker/name_th.rb#5
module FFaker::NameTH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameTH

  # source://ffaker//lib/ffaker/name_th.rb#9
  def first_name; end

  # source://ffaker//lib/ffaker/name_th.rb#13
  def last_name; end

  # source://ffaker//lib/ffaker/name_th.rb#21
  def name; end

  # source://ffaker//lib/ffaker/name_th.rb#17
  def nick_name; end
end

# source://ffaker//lib/ffaker/name_th_en.rb#6
module FFaker::NameTHEN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameTHEN

  # source://ffaker//lib/ffaker/name_th_en.rb#10
  def first_name; end

  # source://ffaker//lib/ffaker/name_th_en.rb#14
  def last_name; end

  # source://ffaker//lib/ffaker/name_th_en.rb#22
  def name; end

  # source://ffaker//lib/ffaker/name_th_en.rb#18
  def nick_name; end
end

# source://ffaker//lib/ffaker/name_tw.rb#4
module FFaker::NameTW
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameTW

  # source://ffaker//lib/ffaker/name_tw.rb#12
  def first_name; end

  # source://ffaker//lib/ffaker/name_tw.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/name_tw.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/name_ua.rb#4
module FFaker::NameUA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameUA

  # source://ffaker//lib/ffaker/name_ua.rb#36
  def first_name; end

  # source://ffaker//lib/ffaker/name_ua.rb#12
  def first_name_female; end

  # source://ffaker//lib/ffaker/name_ua.rb#16
  def first_name_male; end

  # source://ffaker//lib/ffaker/name_ua.rb#40
  def last_name; end

  # source://ffaker//lib/ffaker/name_ua.rb#28
  def last_name_female; end

  # source://ffaker//lib/ffaker/name_ua.rb#32
  def last_name_male; end

  # source://ffaker//lib/ffaker/name_ua.rb#20
  def middle_name_female; end

  # source://ffaker//lib/ffaker/name_ua.rb#24
  def middle_name_male; end

  # source://ffaker//lib/ffaker/name_ua.rb#44
  def name; end
end

# source://ffaker//lib/ffaker/name_ua.rb#8
FFaker::NameUA::FIRST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::FIRST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::FIRST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ua.rb#9
FFaker::NameUA::LAST_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::LAST_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::LAST_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_ua.rb#10
FFaker::NameUA::MIDDLE_NAMES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::MIDDLE_NAMES_FEMALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NameUA::MIDDLE_NAMES_MALE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/name_vn.rb#4
module FFaker::NameVN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NameVN

  # source://ffaker//lib/ffaker/name_vn.rb#12
  def first_name; end

  # source://ffaker//lib/ffaker/name_vn.rb#24
  def last_first; end

  # source://ffaker//lib/ffaker/name_vn.rb#16
  def last_name; end

  # source://ffaker//lib/ffaker/name_vn.rb#20
  def middle_name; end

  # source://ffaker//lib/ffaker/name_vn.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/nato_alphabet.rb#4
module FFaker::NatoAlphabet
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::NatoAlphabet

  # source://ffaker//lib/ffaker/nato_alphabet.rb#15
  def alphabetic_code; end

  # source://ffaker//lib/ffaker/nato_alphabet.rb#23
  def callsign; end

  # source://ffaker//lib/ffaker/nato_alphabet.rb#11
  def code; end

  # source://ffaker//lib/ffaker/nato_alphabet.rb#27
  def codify(masks); end

  # source://ffaker//lib/ffaker/nato_alphabet.rb#19
  def numeric_code; end
end

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NatoAlphabet::ALPHABET_CODES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/nato_alphabet.rb#9
FFaker::NatoAlphabet::CODES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::NatoAlphabet::NUMERIC_CODES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/nato_alphabet.rb#8
FFaker::NatoAlphabet::STOP_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/number.rb#4
module FFaker::Number
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Number

  # source://ffaker//lib/ffaker/number.rb#18
  def between(from: T.unsafe(nil), to: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/number.rb#12
  def decimal(whole_digits: T.unsafe(nil), fractional_digits: T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/number.rb#8
  def number(digits: T.unsafe(nil)); end

  private

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/number.rb#24
  def generate_pattern(digits); end
end

# source://ffaker//lib/ffaker/phone_number.rb#4
module FFaker::PhoneNumber
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumber

  # source://ffaker//lib/ffaker/phone_number.rb#29
  def area_code; end

  # source://ffaker//lib/ffaker/phone_number.rb#39
  def exchange_code; end

  # source://ffaker//lib/ffaker/phone_number.rb#54
  def imei(serial_number = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number.rb#50
  def phone_calling_code; end

  # source://ffaker//lib/ffaker/phone_number.rb#8
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number.rb#46
  def short_phone_number; end
end

# Based on information from http://en.wikipedia.org/wiki/Telephone_numbers_in_Australia
#
# source://ffaker//lib/ffaker/phone_number_au.rb#5
module FFaker::PhoneNumberAU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberAU

  # source://ffaker//lib/ffaker/phone_number_au.rb#57
  def country_code; end

  # Generates a general phone number
  #  (0x) xxxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_au.rb#38
  def home_work_phone_number; end

  # Return a prefix in HOME_WORK_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberAU::HOME_WORK_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_au.rb#27
  def home_work_phone_prefix; end

  # source://ffaker//lib/ffaker/phone_number_au.rb#65
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_au.rb#61
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_au.rb#69
  def international_phone_number; end

  # Generates a mobile phone number
  # 04xx xxx xxx
  #
  # source://ffaker//lib/ffaker/phone_number_au.rb#45
  def mobile_phone_number; end

  # Return a prefix in MOBILE_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberAU::MOBILE_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_au.rb#20
  def mobile_phone_prefix; end

  # generates mobile or home/work number
  #
  # source://ffaker//lib/ffaker/phone_number_au.rb#50
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number_au.rb#31
  def phone_prefix; end
end

# Home or Work Operator prefixes
#
# source://ffaker//lib/ffaker/phone_number_au.rb#13
FFaker::PhoneNumberAU::HOME_WORK_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# Mobile prefixes
#
# source://ffaker//lib/ffaker/phone_number_au.rb#10
FFaker::PhoneNumberAU::MOBILE_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_au.rb#15
FFaker::PhoneNumberAU::OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# Sources:
# - https://en.wikipedia.org/wiki/Telephone_numbers_in_Brazil
# - http://www.teleco.com.br/num_cel.asp
# - http://ddd.online24hs.com.br/
# - https://tecnoblog.net/24850/prefixo-10-para-grande-sao-paulo-deve-comecar-a-funcionar-em-outubro/
# - http://agenciabrasil.ebc.com.br/geral/noticia/2016-10/numeros-de-celulares-de-todo-o-pais-terao-nove-digitos-partir-do-dia-6
#
# source://ffaker//lib/ffaker/phone_number_br.rb#11
module FFaker::PhoneNumberBR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberBR

  # source://ffaker//lib/ffaker/phone_number_br.rb#53
  def country_code; end

  # source://ffaker//lib/ffaker/phone_number_br.rb#31
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_br.rb#49
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_br.rb#45
  def international_mobile_phone_number; end

  # pick a random phone number with the international prefix code
  #
  # source://ffaker//lib/ffaker/phone_number_br.rb#41
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_br.rb#35
  def mobile_phone_number; end

  # generate a random phone number
  #
  # source://ffaker//lib/ffaker/phone_number_br.rb#27
  def phone_number; end

  private

  # source://ffaker//lib/ffaker/phone_number_br.rb#59
  def number(prefixes, country_prefix = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number_br.rb#73
  def random_space; end
end

# source://ffaker//lib/ffaker/phone_number_br.rb#16
FFaker::PhoneNumberBR::AREA_CODE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_br.rb#15
FFaker::PhoneNumberBR::COUNTRY_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_br.rb#21
FFaker::PhoneNumberBR::HOME_WORK_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_br.rb#22
FFaker::PhoneNumberBR::MOBILE_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_br.rb#23
FFaker::PhoneNumberBR::PHONE_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#4
module FFaker::PhoneNumberCH
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberCH

  # source://ffaker//lib/ffaker/phone_number_ch.rb#34
  def free_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ch.rb#26
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ch.rb#30
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ch.rb#16
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ch.rb#42
  def premium_rate_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ch.rb#38
  def shared_cost_phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_ch.rb#9
FFaker::PhoneNumberCH::AREA_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#8
FFaker::PhoneNumberCH::COUNTRY_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#11
FFaker::PhoneNumberCH::FREE_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#10
FFaker::PhoneNumberCH::MOBILE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#14
FFaker::PhoneNumberCH::PHONE_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#13
FFaker::PhoneNumberCH::PREMIUM_RATE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ch.rb#12
FFaker::PhoneNumberCH::SHARED_COST_PREFIX = T.let(T.unsafe(nil), Array)

# Based on information from http://en.wikipedia.org/wiki/Telephone_numbers_in_Cuba
#
# source://ffaker//lib/ffaker/phone_number_cu.rb#5
module FFaker::PhoneNumberCU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberCU

  # Country Code is E.164 Country Code
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#63
  def country_code; end

  # E.164 formats
  # Based on information from http://en.wikipedia.org/wiki/E.164
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#92
  def e164_country_code; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#100
  def e164_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#96
  def e164_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#108
  def e164_phone_number; end

  # Generates general number
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#57
  def general_phone_number; end

  # Generates a general phone number
  # (0x) xxx xxxx or (0xx) xx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#40
  def home_work_phone_number; end

  # Return a prefix in HOME_WORK_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberCU::HOME_WORK_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#29
  def home_work_phone_prefix; end

  # International formats
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#69
  def international_country_code; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#77
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#73
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#85
  def international_phone_number; end

  # Generates a mobile phone number
  # 05 xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#51
  def mobile_phone_number; end

  # Return a prefix in MOBILE_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberCU::MOBILE_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#22
  def mobile_phone_prefix; end

  # Generates phone number
  #
  # source://ffaker//lib/ffaker/phone_number_cu.rb#114
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number_cu.rb#33
  def phone_prefix; end
end

# Home or Work Operator prefixes
#
# source://ffaker//lib/ffaker/phone_number_cu.rb#13
FFaker::PhoneNumberCU::HOME_WORK_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# Mobile prefixes
#
# source://ffaker//lib/ffaker/phone_number_cu.rb#10
FFaker::PhoneNumberCU::MOBILE_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_cu.rb#17
FFaker::PhoneNumberCU::OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_da.rb#4
module FFaker::PhoneNumberDA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberDA

  # source://ffaker//lib/ffaker/phone_number_da.rb#27
  def country_code; end

  # Generates a general phone number
  #  xxxxxxxx
  #
  # source://ffaker//lib/ffaker/phone_number_da.rb#11
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_da.rb#35
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_da.rb#31
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_da.rb#39
  def international_phone_number; end

  # Generates a mobile phone number
  # xxxxxxxxx
  #
  # source://ffaker//lib/ffaker/phone_number_da.rb#18
  def mobile_phone_number; end

  # generates mobile or home/work number
  #
  # source://ffaker//lib/ffaker/phone_number_da.rb#23
  def phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_de.rb#4
module FFaker::PhoneNumberDE
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberDE

  # source://ffaker//lib/ffaker/phone_number_de.rb#34
  def country_code; end

  # source://ffaker//lib/ffaker/phone_number_de.rb#30
  def home_work_phone_number(leading_zero = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number_de.rb#42
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_de.rb#38
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_de.rb#46
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_de.rb#26
  def mobile_phone_number(leading_zero = T.unsafe(nil)); end

  # Mobile prefixes are in the 015x, 016x, 017x ranges
  #
  # source://ffaker//lib/ffaker/phone_number_de.rb#9
  def mobile_prefix(leading_zero = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number_de.rb#22
  def phone_number; end

  # Region prefixes are in range 02..09 with length of 3 to 5 digits
  #
  # source://ffaker//lib/ffaker/phone_number_de.rb#16
  def region_prefix(leading_zero = T.unsafe(nil)); end
end

# Source: https://en.wikipedia.org/wiki/Telephone_numbers_in_France
#
# source://ffaker//lib/ffaker/phone_number_fr.rb#5
module FFaker::PhoneNumberFR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberFR

  # source://ffaker//lib/ffaker/phone_number_fr.rb#30
  def country_code; end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#17
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#38
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#34
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#42
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#21
  def mobile_phone_number; end

  # generates mobile or home/work number
  #
  # source://ffaker//lib/ffaker/phone_number_fr.rb#26
  def phone_number; end

  private

  # source://ffaker//lib/ffaker/phone_number_fr.rb#48
  def number(prefixes, country_prefix = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number_fr.rb#61
  def random_space; end
end

# source://ffaker//lib/ffaker/phone_number_fr.rb#10
FFaker::PhoneNumberFR::AREA_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_fr.rb#9
FFaker::PhoneNumberFR::COUNTRY_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_fr.rb#12
FFaker::PhoneNumberFR::HOME_WORK_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_fr.rb#13
FFaker::PhoneNumberFR::MOBILE_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_fr.rb#11
FFaker::PhoneNumberFR::NON_AREA_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_fr.rb#15
FFaker::PhoneNumberFR::PHONE_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_fr.rb#14
FFaker::PhoneNumberFR::PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_id.rb#4
module FFaker::PhoneNumberID
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberID

  # source://ffaker//lib/ffaker/phone_number_id.rb#14
  def home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_id.rb#28
  def international_home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_id.rb#24
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_id.rb#32
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_id.rb#10
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_id.rb#20
  def phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_id.rb#8
FFaker::PhoneNumberID::COUNTRY_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_it.rb#4
module FFaker::PhoneNumberIT
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberIT

  # source://ffaker//lib/ffaker/phone_number_it.rb#19
  def home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_it.rb#23
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_it.rb#11
  def phone_number; end

  private

  # source://ffaker//lib/ffaker/phone_number_it.rb#29
  def number(prefixes); end

  # source://ffaker//lib/ffaker/phone_number_it.rb#40
  def random_space; end
end

# source://ffaker//lib/ffaker/phone_number_it.rb#8
FFaker::PhoneNumberIT::COUNTRY_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_it.rb#9
FFaker::PhoneNumberIT::PHONE_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ja.rb#6
module FFaker::PhoneNumberJA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberJA

  # source://ffaker//lib/ffaker/phone_number_ja.rb#22
  def home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#63
  def home_phone_number_format(disit); end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#54
  def home_phone_prefix(disit = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#38
  def international_home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#43
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#47
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#27
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#72
  def mobile_phone_number_format; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#68
  def mobile_prefix; end

  # source://ffaker//lib/ffaker/phone_number_ja.rb#31
  def phone_number; end

  private

  # source://ffaker//lib/ffaker/phone_number_ja.rb#79
  def select_home_phone_format(disit); end
end

# source://ffaker//lib/ffaker/phone_number_ja.rb#16
FFaker::PhoneNumberJA::FOUR_DISIT_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#19
FFaker::PhoneNumberJA::IP_PHONE_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#11
FFaker::PhoneNumberJA::JAPAN_COUNTRY_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#10
FFaker::PhoneNumberJA::JAPAN_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#20
FFaker::PhoneNumberJA::MOBILE_NUMBER_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#18
FFaker::PhoneNumberJA::MOBILE_PHONE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_ja.rb#13
FFaker::PhoneNumberJA::ONE_DISIT_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#15
FFaker::PhoneNumberJA::THREE_DISIT_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ja.rb#14
FFaker::PhoneNumberJA::TWO_DISIT_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_kr.rb#4
module FFaker::PhoneNumberKR
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberKR

  # source://ffaker//lib/ffaker/phone_number_kr.rb#27
  def contry_code; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#19
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#37
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#31
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#43
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#23
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_kr.rb#12
  def phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_kr.rb#8
FFaker::PhoneNumberKR::HOME_PHONE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_kr.rb#10
FFaker::PhoneNumberKR::MOBILE_PHONE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_mx.rb#4
module FFaker::PhoneNumberMX
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberMX

  # source://ffaker//lib/ffaker/phone_number_mx.rb#30
  def country_code; end

  # Generates a general phone number
  #  xx xxxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_mx.rb#11
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_mx.rb#38
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_mx.rb#34
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_mx.rb#42
  def international_phone_number; end

  # Generates a mobile phone number
  # 044 xx xxxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_mx.rb#18
  def mobile_phone_number; end

  # generates mobile or home/work number
  #
  # source://ffaker//lib/ffaker/phone_number_mx.rb#23
  def phone_number; end

  # Generates a toll-free number
  #  01 800 xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_mx.rb#52
  def toll_free_number; end
end

# source://ffaker//lib/ffaker/phone_number_nl.rb#4
module FFaker::PhoneNumberNL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberNL

  # source://ffaker//lib/ffaker/phone_number_nl.rb#22
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_nl.rb#37
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_nl.rb#42
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_nl.rb#31
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_nl.rb#27
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_nl.rb#16
  def phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_nl.rb#9
FFaker::PhoneNumberNL::AREA_CODE_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_nl.rb#8
FFaker::PhoneNumberNL::COUNTRY_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_nl.rb#14
FFaker::PhoneNumberNL::MOBILE_PHONE_NUMBER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_nl.rb#10
FFaker::PhoneNumberNL::PHONE_NUMBER = T.let(T.unsafe(nil), Hash)

# Inspirations:
# https://pl.wikipedia.org/wiki/Numery_telefoniczne_w_Polsce
# https://pl.wikipedia.org/wiki/Plan_numeracji_krajowej
#
# source://ffaker//lib/ffaker/phone_number_pl.rb#7
module FFaker::PhoneNumberPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils

  private

  # source://ffaker//lib/ffaker/phone_number_pl.rb#50
  def area_code; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#27
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#46
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#42
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#35
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#31
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#63
  def mobile_phone_number_format; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#54
  def mobile_prefix; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#20
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number_pl.rb#58
  def phone_number_format; end

  class << self
    # source://ffaker//lib/ffaker/phone_number_pl.rb#50
    def area_code; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#27
    def home_work_phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#46
    def international_home_work_phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#42
    def international_mobile_phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#35
    def international_phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#31
    def mobile_phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#63
    def mobile_phone_number_format; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#54
    def mobile_prefix; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#20
    def phone_number; end

    # source://ffaker//lib/ffaker/phone_number_pl.rb#58
    def phone_number_format; end
  end
end

# source://ffaker//lib/ffaker/phone_number_pl.rb#15
FFaker::PhoneNumberPL::AREA_CODES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_pl.rb#13
FFaker::PhoneNumberPL::COUNTRY_CODE = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_pl.rb#14
FFaker::PhoneNumberPL::MOBILE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_pl.rb#12
FFaker::PhoneNumberPL::PHONE_NUMBER_FORMAT = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ru.rb#4
module FFaker::PhoneNumberRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberRU

  # Internal country code
  #   8
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#92
  def country_code; end

  # Generate home or work phone number with internal country code
  #   8 011 232 22 22
  #   8 836 331 23 12
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#70
  def home_work_phone_number; end

  # Home or work phone prefix
  #  081
  #  301
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#100
  def home_work_phone_prefix; end

  # International country code
  #   +7
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#85
  def international_country_code; end

  # Generate home or work phone number with international country code
  #   +7 842 933 24 99
  #   +7 851 921 35 92
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#35
  def international_home_work_phone_number; end

  # Generate mobile phone number with international country code
  #   +7 929 933 24 99
  #   +7 978 921 35 92
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#27
  def international_mobile_phone_number; end

  # Generate general phone number with international country code
  #   +7 929 933 24 99
  #   +7 851 921 35 92
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#16
  def international_phone_number; end

  # Generate toll free phone number with international country code
  #   +7 800 413 01 33
  #   +7 800 153 55 22
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#43
  def international_toll_free_number; end

  # Generate mobile phone number with internal country code
  #   8 949 232 22 22
  #   8 999 331 23 12
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#62
  def mobile_phone_number; end

  # Mobile phone prefix
  #  929
  #  978
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#108
  def mobile_phone_prefix; end

  # Generate general phone number with internal country code
  #   8 999 044 31 33
  #   8 843 944 33 33
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#51
  def phone_number; end

  # Generate toll free phone number with internal country code
  #   8 800 413 01 33
  #   8 800 153 55 22
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#78
  def toll_free_number; end

  private

  # Build phone number by country_code and prefix
  #
  # source://ffaker//lib/ffaker/phone_number_ru.rb#116
  def build_phone_number(country_code, prefix); end
end

# source://ffaker//lib/ffaker/phone_number_ru.rb#9
FFaker::PhoneNumberRU::COUNTRY_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ru.rb#8
FFaker::PhoneNumberRU::INTERNATIONAL_COUNTRY_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ru.rb#10
FFaker::PhoneNumberRU::TOLL_FREE_PREFIX = T.let(T.unsafe(nil), String)

# Format for swedish numbers, from here
# from http://sv.wikipedia.org/wiki/Telefonnummer
#
# All area codes are from this list
# http://sv.wikipedia.org/wiki/Lista_%C3%B6ver_svenska_riktnummer
#
# - Length 9
#   08-xxx xxx xx, 0xx-xxx xx xx, 0xxx-xx xx xx
# - Length 8
#   08-xxx xx xx, 0xx-xx xx xx, 0xxx-xxx xx
# - Length 7
#   08-xx xx xx, 0xx-xxx xx
#
# source://ffaker//lib/ffaker/phone_number_se.rb#17
module FFaker::PhoneNumberSE
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberSE

  # source://ffaker//lib/ffaker/phone_number_se.rb#67
  def area_prefix; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#55
  def country_prefix; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#40
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#63
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#59
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#48
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#44
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#84
  def mobile_phone_number_format; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#80
  def mobile_prefix; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#33
  def phone_number; end

  # source://ffaker//lib/ffaker/phone_number_se.rb#71
  def phone_number_format; end
end

# source://ffaker//lib/ffaker/phone_number_se.rb#30
FFaker::PhoneNumberSE::COUNTRY_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_se.rb#29
FFaker::PhoneNumberSE::MOBILE_PHONE_FORMAT = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_se.rb#31
FFaker::PhoneNumberSE::MOBILE_PHONE_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_se.rb#21
FFaker::PhoneNumberSE::PHONE_FORMAT_PREFIX_2 = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_se.rb#24
FFaker::PhoneNumberSE::PHONE_FORMAT_PREFIX_3 = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_se.rb#27
FFaker::PhoneNumberSE::PHONE_FORMAT_PREFIX_4 = T.let(T.unsafe(nil), Array)

# Based on information from http://en.wikipedia.org/wiki/Telephone_numbers_in_Singapore
#
# source://ffaker//lib/ffaker/phone_number_sg.rb#5
module FFaker::PhoneNumberSG
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberSG

  # source://ffaker//lib/ffaker/phone_number_sg.rb#77
  def country_code; end

  # Generates a fixed line phone number
  #  6xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#29
  def fixed_line_number; end

  # Generates an international toll-free number
  #  800 xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#50
  def international_toll_free_number; end

  # Generates a fixed mobile phone number
  #  8xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#36
  def mobile_number; end

  # Generates a fixed mobile phone number or pager service number
  #  9xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#43
  def mobile_or_pager_number; end

  # generates mobile or home/work number
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#69
  def phone_number; end

  # Generates a premium service number
  #  (1900) xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#64
  def premium_service_number; end

  # Generates an toll-free number
  #  1800 xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#57
  def toll_free_number; end

  # Generates a voip phone number
  #  3xxx xxxx
  #
  # source://ffaker//lib/ffaker/phone_number_sg.rb#22
  def voip_number; end
end

# source://ffaker//lib/ffaker/phone_number_sn.rb#4
module FFaker::PhoneNumberSN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberSN

  # Generates a home or work phone number
  # Example 33 845 77 99
  # Example 33 945 07 00
  # Example 33 906 29 05
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#59
  def homework_number; end

  # Return a prefix in HOME_WORK_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberSN::HOME_WORK_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#32
  def homework_phone_prefix; end

  # Generates a mobile phone number
  # Example 70 745 77 99
  # Example 76 245 07 00
  # Example 77 726 29 05
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#50
  def mobile_number; end

  # Return a prefix in MOBILE_OPERATORS_PREFIX
  #
  # @see FFaker::PhoneNumberSN::MOBILE_OPERATORS_PREFIX
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#25
  def mobile_phone_prefix; end

  # Generates a random phone number mobile or home or work
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#65
  def phone_number; end

  # Pattern that can be combined with a prefix to generate mobile, office phone_numbers
  # Example 745 77 99
  # Example 245 07 00
  # Example 726 29 05
  #
  # source://ffaker//lib/ffaker/phone_number_sn.rb#41
  def short_phone_number; end
end

# Home or Work Operator prefixes
#
#  33 =>  Orange
#
# source://ffaker//lib/ffaker/phone_number_sn.rb#20
FFaker::PhoneNumberSN::HOME_WORK_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# Mobile Operator prefixes
#
#  77 =>  Orange
#  76 =>  Tigo
#  70 =>  Expresso
#
# source://ffaker//lib/ffaker/phone_number_sn.rb#14
FFaker::PhoneNumberSN::MOBILE_OPERATORS_PREFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_tw.rb#4
module FFaker::PhoneNumberTW
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberTW

  # source://ffaker//lib/ffaker/phone_number_tw.rb#29
  def contry_code; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#15
  def home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#39
  def international_home_work_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#33
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#45
  def international_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#25
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_tw.rb#11
  def phone_number; end
end

# source://ffaker//lib/ffaker/phone_number_tw.rb#8
FFaker::PhoneNumberTW::HOME_PHONE_PREFIXES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/phone_number_tw.rb#9
FFaker::PhoneNumberTW::MOBILE_PHONE_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ua.rb#4
module FFaker::PhoneNumberUA
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::PhoneNumberUA

  # source://ffaker//lib/ffaker/phone_number_ua.rb#16
  def home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ua.rb#24
  def international_home_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ua.rb#28
  def international_mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ua.rb#20
  def mobile_phone_number; end

  # source://ffaker//lib/ffaker/phone_number_ua.rb#12
  def phone_number; end

  private

  # source://ffaker//lib/ffaker/phone_number_ua.rb#38
  def international_number(prefixes); end

  # source://ffaker//lib/ffaker/phone_number_ua.rb#34
  def local_number(prefixes); end
end

# source://ffaker//lib/ffaker/phone_number_ua.rb#9
FFaker::PhoneNumberUA::COUNTRY_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ua.rb#8
FFaker::PhoneNumberUA::LOCAL_PREFIX = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/phone_number_ua.rb#10
FFaker::PhoneNumberUA::PHONE_NUMBER = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/product.rb#4
module FFaker::Product
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Product

  # source://ffaker//lib/ffaker/product.rb#14
  def brand; end

  # source://ffaker//lib/ffaker/product.rb#36
  def letters(count); end

  # source://ffaker//lib/ffaker/product.rb#41
  def model; end

  # source://ffaker//lib/ffaker/product.rb#32
  def product; end

  # source://ffaker//lib/ffaker/product.rb#26
  def product_name; end
end

# source://ffaker//lib/ffaker/product.rb#12
FFaker::Product::ADDON = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/product.rb#8
FFaker::Product::B2 = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/product.rb#10
FFaker::Product::START = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/product.rb#11
FFaker::Product::SUFFIX = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/product.rb#9
FFaker::Product::VOWELS = T.let(T.unsafe(nil), Array)

# Random Number Generator (RNG) used with ModuleUtils#fetch, #shuffle, #rand
# in order to provide deterministic repeatability.
#
# source://ffaker//lib/ffaker.rb#94
module FFaker::Random
  class << self
    # Returns a new Random object instantiated with #seed.
    #
    # source://ffaker//lib/ffaker.rb#125
    def new_rng; end

    # Returns a random number using an RNG with a known seed.
    #
    # source://ffaker//lib/ffaker.rb#113
    def rand(max = T.unsafe(nil)); end

    # Reset the RNG back to its initial state.
    #
    # source://ffaker//lib/ffaker.rb#108
    def reset!; end

    # Returns the current Random object.
    #
    # source://ffaker//lib/ffaker.rb#120
    def rng; end

    # Returns the current RNG seed.
    #
    # source://ffaker//lib/ffaker.rb#96
    def seed; end

    # Sets the RNG seed and creates a new internal RNG.
    #
    # source://ffaker//lib/ffaker.rb#101
    def seed=(new_seed); end
  end
end

# Methods for returning repeatably-random data using the internal
# Random Number Generator. You should not need to use this directly, it is
# automatically included when you `include ModuleUtils` in a FFaker module.
#
# source://ffaker//lib/ffaker/utils/random_utils.rb#7
module FFaker::RandomUtils
  # Performs Array#sample on `list` using a the internal Random Number
  # Generator so that the results are deterministic.
  #
  # * Returns one random item from `list`.
  # * Pass `count: n` in options argument, where `n` is an integer, to
  # return *n* items from `list`
  #
  # source://ffaker//lib/ffaker/utils/random_utils.rb#20
  def fetch_sample(list, options = T.unsafe(nil)); end

  # Returns a randon number from the internal Random Number Generator. Can be
  # used in place of `rand` or `Kernal.rand`.
  #
  # source://ffaker//lib/ffaker/utils/random_utils.rb#10
  def rand(max = T.unsafe(nil)); end

  # Performs same action as as `Array#suffle` (returns a randomly-reordered
  # copy of `list`) except that it uses the internal Random Number Generator
  # so that the results are deterministic.
  #
  # source://ffaker//lib/ffaker/utils/random_utils.rb#33
  def shuffle(list); end
end

# source://ffaker//lib/ffaker/ssn.rb#4
module FFaker::SSN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SSN

  # The Social Security number is a nine-digit number in the format
  # "AAA-GG-SSSS". More info here:
  #
  # http://en.wikipedia.org/wiki/Social_Security_number
  #
  # source://ffaker//lib/ffaker/ssn.rb#13
  def ssn; end
end

# source://ffaker//lib/ffaker/ssn_mx.rb#4
module FFaker::SSNMX
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SSNMX

  # http://es.wikipedia.org/wiki/Instituto_Mexicano_del_Seguro_Social
  # The Social Security number from IMSS
  # (Instituto Mexicano del Seguro Social)
  # is a eleven-digit number in the format
  # "AABBCCDDEE-F".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#25
  def imss; end

  # http://es.wikipedia.org/wiki/Instituto_Mexicano_del_Seguro_Social
  # The Social Security number from IMSS
  # (Instituto Mexicano del Seguro Social)
  # is a eleven-digit number in the format
  # "AABBCCDDEEF".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#34
  def imss_undashed; end

  # http://es.wikipedia.org/wiki/Instituto_de_Seguridad_y_Servicios_Sociales_de_los_Trabajadores_del_Estado
  # The Social Security number from ISSSTE
  # (Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado)
  # is a eleven-digit number in the format
  # "AABBCCDDEE-F".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#43
  def issste; end

  # http://es.wikipedia.org/wiki/Instituto_de_Seguridad_y_Servicios_Sociales_de_los_Trabajadores_del_Estado
  # The Social Security number from ISSSTE
  # (Instituto de Seguridad y Servicios Sociales de los Trabajadores del Estado)
  # is a eleven-digit number in the format
  # "AABBCCDDEEF".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#52
  def issste_undashed; end

  # The Social Security number is a eleven-digit number in the format
  # "AABBCCDDEE-F".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#10
  def ssn; end

  # The Social Security number is a eleven-digit number in the format
  # "AABBCCDDEEF".
  #
  # source://ffaker//lib/ffaker/ssn_mx.rb#16
  def ssn_undashed; end
end

# The Social Security number is a 12-digit number in the format:
# "YYYYDDMM-XXXX'
#
# http://sv.wikipedia.org/wiki/Personnummer_i_Sverige
#
# The 4 last digits (XXXX) are generated based on what region the person are
# born # in, the gender and the last one is a check digit using the luhn
# algorithm.
#
# http://en.wikipedia.org/wiki/Luhn_algorithm
#
# Usage:
# ssn(from: Time.local(1980, 2, 28),
#     to: Time.local(2000, 2, 28),
#     gender: :male)
#
# source://ffaker//lib/ffaker/ssn_se.rb#22
module FFaker::SSNSE
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SSNSE

  # source://ffaker//lib/ffaker/ssn_se.rb#28
  def ssn(opts = T.unsafe(nil)); end

  private

  # source://ffaker//lib/ffaker/ssn_se.rb#40
  def generate_ssn(from, to, gender); end

  # @raise [ArgumentError]
  #
  # source://ffaker//lib/ffaker/ssn_se.rb#49
  def raise_error_on_bad_arguments(from, to, gender); end

  # source://ffaker//lib/ffaker/ssn_se.rb#56
  def random_birth_time_between(from = T.unsafe(nil), to = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/ssn_se.rb#68
  def random_region_even; end

  # source://ffaker//lib/ffaker/ssn_se.rb#60
  def random_region_for(gender); end

  # source://ffaker//lib/ffaker/ssn_se.rb#72
  def random_region_odd; end

  # source://ffaker//lib/ffaker/ssn_se.rb#76
  def three_character_string(number); end
end

# source://ffaker//lib/ffaker/ssn_se.rb#26
FFaker::SSNSE::GENDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/sem_ver.rb#4
module FFaker::SemVer
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SemVer

  # source://ffaker//lib/ffaker/sem_ver.rb#10
  def next(previous_version = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/sem_ver.rb#8
FFaker::SemVer::UPDATE = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/skill.rb#4
module FFaker::Skill
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Skill

  # source://ffaker//lib/ffaker/skill.rb#20
  def specialties(num = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/skill.rb#16
  def specialty; end

  # source://ffaker//lib/ffaker/skill.rb#8
  def tech_skill; end

  # source://ffaker//lib/ffaker/skill.rb#12
  def tech_skills(num = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/sport.rb#4
module FFaker::Sport
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Sport

  # @deprecated US sports name. Moved into {SportUS}
  #
  # source://ffaker//lib/ffaker/sport.rb#9
  def name; end
end

# Inspirations:
# https://pl.wikipedia.org/wiki/Kategoria:Dyscypliny_sportowe
# https://pl.wikipedia.org/wiki/Igrzyska_olimpijskie
#
# source://ffaker//lib/ffaker/sport_pl.rb#7
module FFaker::SportPL
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SportPL

  # source://ffaker//lib/ffaker/sport_pl.rb#13
  def name; end

  # source://ffaker//lib/ffaker/sport_pl.rb#17
  def summer; end

  # source://ffaker//lib/ffaker/sport_pl.rb#21
  def winter; end
end

# source://ffaker//lib/ffaker/sport_pl.rb#11
FFaker::SportPL::ALL = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::SportPL::SUMMER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::SportPL::WINTER = T.let(T.unsafe(nil), Array)

# Inspirations:
# https://olympic.ru/team/sport/
# http://ru.sport-wiki.org/vidy-sporta/
#
# source://ffaker//lib/ffaker/sport_ru.rb#7
module FFaker::SportRU
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SportRU

  # source://ffaker//lib/ffaker/sport_ru.rb#13
  def name; end

  # source://ffaker//lib/ffaker/sport_ru.rb#17
  def summer; end

  # source://ffaker//lib/ffaker/sport_ru.rb#21
  def winter; end
end

# source://ffaker//lib/ffaker/sport_ru.rb#11
FFaker::SportRU::ALL = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::SportRU::SUMMER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/utils/module_utils.rb#22
FFaker::SportRU::WINTER = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/sport_us.rb#4
module FFaker::SportUS
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::SportUS

  # source://ffaker//lib/ffaker/sport_us.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/string.rb#4
module FFaker::String
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::String

  # source://ffaker//lib/ffaker/string.rb#19
  def from_regexp(exp); end

  private

  # source://ffaker//lib/ffaker/string.rb#32
  def generate_range(tokens); end

  # source://ffaker//lib/ffaker/string.rb#77
  def generate_token(token, tokens); end

  # source://ffaker//lib/ffaker/string.rb#47
  def process_token(tokens); end

  # source://ffaker//lib/ffaker/string.rb#99
  def special(token); end
end

# source://ffaker//lib/ffaker/string.rb#8
FFaker::String::BACKSLASH = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/string.rb#9
FFaker::String::DASH = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/string.rb#17
FFaker::String::ESCAPEABLE_CHARS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#13
FFaker::String::LETTERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#11
FFaker::String::LOWERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#14
FFaker::String::NUMBERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#16
FFaker::String::SPACES = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#12
FFaker::String::UPPERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/string.rb#15
FFaker::String::WORD_CHARS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/time.rb#6
module FFaker::Time
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Time

  # source://ffaker//lib/ffaker/time.rb#44
  def between(from, to); end

  # source://ffaker//lib/ffaker/time.rb#40
  def date(params = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/time.rb#23
  def datetime(params = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/time.rb#19
  def day_of_week(options = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/time.rb#15
  def month; end

  private

  # source://ffaker//lib/ffaker/time.rb#52
  def convert_to_time(value); end
end

# source://ffaker//lib/ffaker/time.rb#13
FFaker::Time::DAYS_OF_WEEK = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/time.rb#10
FFaker::Time::MONTHS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/tweet.rb#4
module FFaker::Tweet
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Tweet

  # source://ffaker//lib/ffaker/tweet.rb#43
  def body(required_length = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/tweet.rb#33
  def mention; end

  # source://ffaker//lib/ffaker/tweet.rb#37
  def mentions(num = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/tweet.rb#55
  def tags(num_tags = T.unsafe(nil)); end

  # Options
  # num_hashtags:   How many hashtags (default: (skewed (40%) 1-4))
  # num_mentions:   How many mentions (default: (skewed (20% 1-2))
  # reply:          Add reply? (default: (random 10%)
  # body_length:    Target length (rand(20..140)) (will be <= target)
  #
  # source://ffaker//lib/ffaker/tweet.rb#13
  def tweet(args = T.unsafe(nil)); end
end

# source://ffaker//lib/ffaker/utils/unique_utils.rb#6
class FFaker::UniqueUtils
  # @return [UniqueUtils] a new instance of UniqueUtils
  #
  # source://ffaker//lib/ffaker/utils/unique_utils.rb#24
  def initialize(generator, max_retries); end

  # source://ffaker//lib/ffaker/utils/unique_utils.rb#29
  def clear; end

  private

  # @raise [RetryLimitExceeded]
  #
  # source://ffaker//lib/ffaker/utils/unique_utils.rb#35
  def method_missing(name, *args, **kwargs); end

  # source://ffaker//lib/ffaker/utils/unique_utils.rb#52
  def previous_results; end

  # @return [Boolean]
  #
  # source://ffaker//lib/ffaker/utils/unique_utils.rb#48
  def respond_to_missing?(name, *args); end

  class << self
    # source://ffaker//lib/ffaker/utils/unique_utils.rb#10
    def add_instance(generator, max_retries); end

    # source://ffaker//lib/ffaker/utils/unique_utils.rb#18
    def clear; end

    # source://ffaker//lib/ffaker/utils/unique_utils.rb#14
    def instances; end
  end
end

# source://ffaker//lib/ffaker/utils/unique_utils.rb#7
class FFaker::UniqueUtils::RetryLimitExceeded < ::StandardError; end

# source://ffaker//lib/ffaker/unit.rb#4
module FFaker::Unit
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Unit

  # source://ffaker//lib/ffaker/unit.rb#34
  def temperature_abbr; end

  # source://ffaker//lib/ffaker/unit.rb#30
  def temperature_name; end

  # source://ffaker//lib/ffaker/unit.rb#26
  def time_abbr; end

  # source://ffaker//lib/ffaker/unit.rb#22
  def time_name; end

  private

  # source://ffaker//lib/ffaker/unit.rb#44
  def temperature; end

  # source://ffaker//lib/ffaker/unit.rb#40
  def time; end
end

# source://ffaker//lib/ffaker/unit.rb#16
FFaker::Unit::TEMPERATURE_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit.rb#8
FFaker::Unit::TIME_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_english.rb#4
module FFaker::UnitEnglish
  include ::FFaker::Unit
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Unit
  extend ::FFaker::UnitEnglish

  # source://ffaker//lib/ffaker/unit_english.rb#81
  def area_abbr; end

  # source://ffaker//lib/ffaker/unit_english.rb#77
  def area_name; end

  # source://ffaker//lib/ffaker/unit_english.rb#57
  def length_abbr; end

  # source://ffaker//lib/ffaker/unit_english.rb#53
  def length_name; end

  # source://ffaker//lib/ffaker/unit_english.rb#65
  def liquid_abbr; end

  # source://ffaker//lib/ffaker/unit_english.rb#61
  def liquid_name; end

  # source://ffaker//lib/ffaker/unit_english.rb#49
  def mass_abbr; end

  # source://ffaker//lib/ffaker/unit_english.rb#45
  def mass_name; end

  # source://ffaker//lib/ffaker/unit_english.rb#73
  def volume_abbr; end

  # source://ffaker//lib/ffaker/unit_english.rb#69
  def volume_name; end

  private

  # source://ffaker//lib/ffaker/unit_english.rb#103
  def area; end

  # source://ffaker//lib/ffaker/unit_english.rb#87
  def length; end

  # source://ffaker//lib/ffaker/unit_english.rb#95
  def liquid; end

  # source://ffaker//lib/ffaker/unit_english.rb#91
  def mass; end

  # source://ffaker//lib/ffaker/unit_english.rb#99
  def volume; end
end

# source://ffaker//lib/ffaker/unit_english.rb#35
FFaker::UnitEnglish::AREA_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_english.rb#10
FFaker::UnitEnglish::LENGTH_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_english.rb#24
FFaker::UnitEnglish::LIQUID_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_english.rb#17
FFaker::UnitEnglish::MASS_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_english.rb#30
FFaker::UnitEnglish::VOLUME_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_metric.rb#4
module FFaker::UnitMetric
  include ::FFaker::Unit
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Unit
  extend ::FFaker::UnitMetric

  # source://ffaker//lib/ffaker/unit_metric.rb#72
  def area_abbr; end

  # source://ffaker//lib/ffaker/unit_metric.rb#68
  def area_name; end

  # source://ffaker//lib/ffaker/unit_metric.rb#48
  def length_abbr; end

  # source://ffaker//lib/ffaker/unit_metric.rb#44
  def length_name; end

  # source://ffaker//lib/ffaker/unit_metric.rb#56
  def liquid_abbr; end

  # source://ffaker//lib/ffaker/unit_metric.rb#52
  def liquid_name; end

  # source://ffaker//lib/ffaker/unit_metric.rb#40
  def mass_abbr; end

  # source://ffaker//lib/ffaker/unit_metric.rb#36
  def mass_name; end

  # source://ffaker//lib/ffaker/unit_metric.rb#64
  def volume_abbr; end

  # source://ffaker//lib/ffaker/unit_metric.rb#60
  def volume_name; end

  private

  # source://ffaker//lib/ffaker/unit_metric.rb#94
  def area; end

  # source://ffaker//lib/ffaker/unit_metric.rb#78
  def length; end

  # source://ffaker//lib/ffaker/unit_metric.rb#86
  def liquid; end

  # source://ffaker//lib/ffaker/unit_metric.rb#82
  def mass; end

  # source://ffaker//lib/ffaker/unit_metric.rb#90
  def volume; end
end

# source://ffaker//lib/ffaker/unit_metric.rb#29
FFaker::UnitMetric::AREA_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_metric.rb#10
FFaker::UnitMetric::LENGTH_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_metric.rb#21
FFaker::UnitMetric::LIQUID_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_metric.rb#16
FFaker::UnitMetric::MASS_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/unit_metric.rb#25
FFaker::UnitMetric::VOLUME_UNITS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/version.rb#4
FFaker::VERSION = T.let(T.unsafe(nil), String)

# source://ffaker//lib/ffaker/vehicle.rb#4
module FFaker::Vehicle
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Vehicle

  # source://ffaker//lib/ffaker/vehicle.rb#75
  def base_color; end

  # source://ffaker//lib/ffaker/vehicle.rb#79
  def drivetrain; end

  # source://ffaker//lib/ffaker/vehicle.rb#117
  def engine_cylinders; end

  # source://ffaker//lib/ffaker/vehicle.rb#121
  def engine_displacement; end

  # source://ffaker//lib/ffaker/vehicle.rb#125
  def fuel_type; end

  # source://ffaker//lib/ffaker/vehicle.rb#129
  def interior_upholstery; end

  # source://ffaker//lib/ffaker/vehicle.rb#83
  def make; end

  # source://ffaker//lib/ffaker/vehicle.rb#87
  def manufacturer_color(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/vehicle.rb#87
  def mfg_color(count = T.unsafe(nil)); end

  # source://ffaker//lib/ffaker/vehicle.rb#93
  def model; end

  # source://ffaker//lib/ffaker/vehicle.rb#109
  def transmission; end

  # source://ffaker//lib/ffaker/vehicle.rb#113
  def transmission_abbr; end

  # source://ffaker//lib/ffaker/vehicle.rb#97
  def trim; end

  # source://ffaker//lib/ffaker/vehicle.rb#101
  def vin; end

  # source://ffaker//lib/ffaker/vehicle.rb#105
  def year; end
end

# source://ffaker//lib/ffaker/vehicle.rb#73
FFaker::Vehicle::CYLINDERS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#70
FFaker::Vehicle::DRIVETRAINS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#72
FFaker::Vehicle::TRANSMISSIONS_ABBR = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#5
module FFaker::Vehicle::VIN
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Vehicle::VIN

  # Generate a VIN that is compliant with specifications of US Title 49 Section 565.15
  # https://www.govinfo.gov/content/pkg/CFR-2019-title49-vol6/xml/CFR-2019-title49-vol6-part565.xml#seqnum565.15
  #
  # Position  Meaning
  # 1-3       Manufacturer ID aka WMI (alpha and digits)
  # 4-8       Vehicle Description ("For passenger cars ..[position 7].. shall be alphabetic")
  # 9         Check Digit (0-9 or "X")
  # 10        Year (see VIN_VALID_YEARS)
  # 11        Plant of manufacture (alpha and digits)
  # 12-17     Serial number (digits only)
  #
  # I, O and Q are NOT allowed. VIN_VALID_ALPHA has valid alpha characters.
  #
  # source://ffaker//lib/ffaker/vehicle.rb#39
  def vin; end
end

# source://ffaker//lib/ffaker/vehicle.rb#22
FFaker::Vehicle::VIN::POSITION_WEIGHTS = T.let(T.unsafe(nil), Array)

# https://en.wikibooks.org/wiki/Vehicle_Identification_Numbers_(VIN_codes)/Check_digit
#
# source://ffaker//lib/ffaker/vehicle.rb#17
FFaker::Vehicle::VIN::TRANSLITERATION_VALUES = T.let(T.unsafe(nil), Hash)

# source://ffaker//lib/ffaker/vehicle.rb#24
FFaker::Vehicle::VIN::VALID_ALPHA = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#25
FFaker::Vehicle::VIN::VALID_ALPHANUMERIC = T.let(T.unsafe(nil), Array)

# https://en.wikibooks.org/wiki/Vehicle_Identification_Numbers_(VIN_codes)/World_Manufacturer_Identifier_(WMI)
#
# source://ffaker//lib/ffaker/vehicle.rb#10
FFaker::Vehicle::VIN::VALID_WMI_REGIONS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#12
FFaker::Vehicle::VIN::VALID_YEAR_CHARS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/vehicle.rb#71
FFaker::Vehicle::YEARS = T.let(T.unsafe(nil), Array)

# source://ffaker//lib/ffaker/venue.rb#4
module FFaker::Venue
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Venue

  # source://ffaker//lib/ffaker/venue.rb#8
  def name; end
end

# source://ffaker//lib/ffaker/youtube.rb#4
module FFaker::Youtube
  extend ::FFaker::RandomUtils
  extend ::FFaker::ModuleUtils
  extend ::FFaker::Youtube

  # source://ffaker//lib/ffaker/youtube.rb#16
  def embed_url; end

  # source://ffaker//lib/ffaker/youtube.rb#12
  def share_url; end

  # source://ffaker//lib/ffaker/youtube.rb#8
  def url; end

  # source://ffaker//lib/ffaker/youtube.rb#20
  def video_id; end
end
